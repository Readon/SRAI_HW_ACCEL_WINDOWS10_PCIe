// 4b98459cb79b8105766cb274f9fd7e3f Generated file. Do not edit.
// File created by WPP compiler version 10.0.16299-Fri Sep 29 01:43:08 2017
// from template km-default.tpl

//
// Define anything which is needed but missing from 
// older versions of the DDK.
//
#include <evntrace.h>
#include <stddef.h>
#include <stdarg.h>
#include <wmistr.h>

#if !defined(TRACE_LEVEL_NONE)
  #define TRACE_LEVEL_NONE        0  
  #define TRACE_LEVEL_CRITICAL    1  
  #define TRACE_LEVEL_FATAL       1  
  #define TRACE_LEVEL_ERROR       2  
  #define TRACE_LEVEL_WARNING     3  
  #define TRACE_LEVEL_INFORMATION 4  
  #define TRACE_LEVEL_VERBOSE     5  
  #define TRACE_LEVEL_RESERVED6   6
  #define TRACE_LEVEL_RESERVED7   7
  #define TRACE_LEVEL_RESERVED8   8
  #define TRACE_LEVEL_RESERVED9   9
#endif
    
#if !defined(TRACE_INFORMATION_CLASS_DEFINE)
typedef enum _TRACE_INFORMATION_CLASS {
    TraceIdClass,
    TraceHandleClass,
    TraceEnableFlagsClass,
    TraceEnableLevelClass,
    GlobalLoggerHandleClass,
    EventLoggerHandleClass,
    AllLoggerHandlesClass,
    TraceHandleByNameClass
} TRACE_INFORMATION_CLASS;
  
#define TRACE_MESSAGE_SEQUENCE               1
#define TRACE_MESSAGE_GUID                   2         
#define TRACE_MESSAGE_COMPONENTID            4           
#define TRACE_MESSAGE_TIMESTAMP              8         
#define TRACE_MESSAGE_PERFORMANCE_TIMESTAMP 16  
#define TRACE_MESSAGE_SYSTEMINFO            32          

#endif // !defined(TRACE_INFORMATION_CLASS_DEFINE)


//
// Advanced tracing APIs (XP and later) will be indirectly called.
//
typedef
LONG
(*PFN_WPPQUERYTRACEINFORMATION) (
    IN  TRACE_INFORMATION_CLASS TraceInformationClass,
    OUT PVOID  TraceInformation,
    IN  ULONG  TraceInformationLength,
    OUT PULONG RequiredLength OPTIONAL,
    IN  PVOID  Buffer OPTIONAL
    );

typedef
LONG
(*PFN_WPPTRACEMESSAGE)(
    IN ULONG64  LoggerHandle,
    IN ULONG   MessageFlags,
    IN LPCGUID MessageGuid,
    IN USHORT  MessageNumber,
    IN ...
    );

// template km-header.tpl

#ifdef  WPP_THIS_FILE
// included twice
#       define  WPP_ALREADY_INCLUDED
#       undef   WPP_THIS_FILE
#endif  // #ifdef WPP_THIS_FILE

#define WPP_THIS_FILE file_io_c

#ifndef WPP_ALREADY_INCLUDED

#define WPP_KERNEL_MODE 
#define WPP_THIS_FILE file_io_c

#if defined(__cplusplus)
extern "C" {
#endif


typedef enum _WPP_TRACE_API_SUITE {
    WppTraceDisabledSuite,
    WppTraceWin2K,
    WppTraceWinXP,
    WppTraceTraceLH,
    WppTraceServer08,
    WppTraceMaxSuite
} WPP_TRACE_API_SUITE;

_IRQL_requires_same_
typedef
VOID
(NTAPI *PETW_CLASSIC_CALLBACK)(
    _In_ LPCGUID Guid,
    _In_ UCHAR ControlCode,
    _In_ PVOID EnableContext, 
    _In_opt_ PVOID CallbackContext
    );

_IRQL_requires_same_
typedef
NTSTATUS
NTKERNELAPI
(FN_ETWREGISTERCLASSICPROVIDER)(
    _In_ LPCGUID ProviderGuid,
    _In_ ULONG Type,
    _In_ PETW_CLASSIC_CALLBACK EnableCallback,
    _In_opt_ PVOID CallbackContext,
    _Out_ PREGHANDLE RegHandle
    );

typedef FN_ETWREGISTERCLASSICPROVIDER *PFN_ETWREGISTERCLASSICPROVIDER;

typedef
BOOLEAN
NTKERNELAPI
(FN_WPPGETVERSION)(
    _Out_opt_ PULONG MajorVersion,
    _Out_opt_ PULONG MinorVersion,
    _Out_opt_ PULONG BuildNumber,
    _Out_opt_ PUNICODE_STRING CSDVersion
    );

typedef FN_WPPGETVERSION *PFN_WPPGETVERSION;

typedef
NTSTATUS
NTKERNELAPI
(FN_ETWUNREGISTER)(
    _In_ REGHANDLE RegHandle
    );

typedef FN_ETWUNREGISTER *PFN_ETWUNREGISTER;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPQUERYTRACEINFORMATION   pfnWppQueryTraceInformation = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPTRACEMESSAGE            pfnWppTraceMessage = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWUNREGISTER              pfnEtwUnregister = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_ETWREGISTERCLASSICPROVIDER pfnEtwRegisterClassicProvider = NULL;

#pragma prefast(suppress:__WARNING_ENCODE_GLOBAL_FUNCTION_POINTER, "this pointer can not be encoded");
__declspec(selectany) PFN_WPPGETVERSION              pfnWppGetVersion = NULL;


__declspec(selectany) WPP_TRACE_API_SUITE            WPPTraceSuite = WppTraceDisabledSuite;


#if !defined(_NTRTL_)
#if !defined(_NTHAL_) 
      // fake RTL_TIME_ZONE_INFORMATION //
    typedef int RTL_TIME_ZONE_INFORMATION;
#endif
#   define _WMIKM_  
#endif
#ifndef WPP_TRACE
#define WPP_TRACE pfnWppTraceMessage
#endif

#if ENABLE_WPP_RECORDER

#define _ENABLE_WPP_RECORDER TRUE

#ifndef WPP_RECORDER
#define WPP_RECORDER WppAutoLogTrace
#endif

#if !defined(WPP_RECORDER_LEVEL_FLAGS_ARGS)
#define WPP_RECORDER_LEVEL_FLAGS_ARGS(lvl, flags) WPP_CONTROL(WPP_BIT_ ## flags).AutoLogContext, lvl, WPP_BIT_ ## flags
#define WPP_RECORDER_LEVEL_FLAGS_FILTER(lvl,flags) (lvl < TRACE_LEVEL_VERBOSE || WPP_CONTROL(WPP_BIT_ ## flags).AutoLogVerboseEnabled)
#endif


#if !defined(WPP_RECORDER_LEVEL_ARGS)
#define WPP_RECORDER_LEVEL_ARGS(lvl) WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogContext, 0, WPP_BIT_ ## lvl
#define WPP_RECORDER_LEVEL_FILTER(lvl) (WPP_CONTROL(WPP_BIT_ ## lvl).AutoLogVerboseEnabled)
#endif

NTSTATUS
WppAutoLogTrace(
    IN PVOID              AutoLogContext,
    IN UCHAR              MessageLevel,
    IN ULONG              MessageFlags,
    IN LPGUID             MessageGuid,
    IN USHORT             MessageNumber,
    IN ...
    );

#else
#define _ENABLE_WPP_RECORDER FALSE
#endif

VOID
WppLoadTracingSupport(
    VOID
    );

NTSTATUS
WppTraceCallback(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _Inout_ PVOID Context,
    _Out_ PULONG Size
    );
#if !defined(WPP_TRACE_CONTROL_NULL_GUID)
DEFINE_GUID(WPP_TRACE_CONTROL_NULL_GUID, 0x00000000L, 0x0000, 0x0000, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
#endif
#define WPP_TRACE_CONTROL(Function,Buffer,BufferSize,ReturnSize) WppTraceCallback(Function,NULL,BufferSize,Buffer,&WPP_CB[0],&ReturnSize);
    

__inline ULONG64 WppQueryLogger(_In_opt_ PCWSTR LoggerName)
{

    if (WppTraceWinXP == WPPTraceSuite) {

        ULONG ReturnLength ;
        LONG Status ;
        ULONG64 TraceHandle ;
        UNICODE_STRING  Buffer  ;
           
        RtlInitUnicodeString(&Buffer, LoggerName ? LoggerName : L"stdout");

        Status = pfnWppQueryTraceInformation(
                                            TraceHandleByNameClass,
                                            (PVOID)&TraceHandle,
                                            sizeof(TraceHandle),
                                            &ReturnLength,
                                            (PVOID)&Buffer
                                            );
        if (Status != STATUS_SUCCESS) {
           return (ULONG64)0 ;
        }
        
        return TraceHandle ;
    } else {
        return (ULONG64) 0 ;
    }
}

typedef LONG (*WMIENTRY_NEW)(
    _In_ UCHAR MinorFunction,
    _In_opt_ PVOID DataPath,
    _In_ ULONG BufferLength,
    _Inout_updates_bytes_(BufferLength) PVOID Buffer,
    _In_ PVOID Context,
    _Out_ PULONG Size
    );

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
    WMIENTRY_NEW                        Callback;
    LPCGUID                             ControlGuid;
    struct _WPP_TRACE_CONTROL_BLOCK    *Next;
    __int64                             Logger;
    PUNICODE_STRING                     RegistryPath;
    UCHAR                               FlagsLen; 
    UCHAR                               Level; 
    USHORT                              Reserved;
    ULONG                               Flags[1];
    ULONG                               ReservedFlags;
    REGHANDLE                           RegHandle;
#if ENABLE_WPP_RECORDER    
    PVOID                               AutoLogContext;
    USHORT                              AutoLogVerboseEnabled;
    USHORT                              AutoLogAttachToMiniDump;
#endif    
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK;

VOID WppCleanupKm(_When_(_ENABLE_WPP_RECORDER, _In_) _When_(!_ENABLE_WPP_RECORDER, _In_opt_) PDRIVER_OBJECT DriverObject);

#define WPP_CLEANUP(DriverObject) WppCleanupKm((PDRIVER_OBJECT)DriverObject)

#define WPP_IsValidSid RtlValidSid
#define WPP_GetLengthSid RtlLengthSid

//
// Callback routine to be defined by the driver, which will be called from WPP callback
// WPP will pass current valued of : GUID, Logger, Enable, Flags, and Level
// 
// To activate driver must define WPP_PRIVATE_ENABLE_CALLBACK in their code, sample below 
// #define WPP_PRIVATE_ENABLE_CALLBACK MyPrivateCallback;
//
typedef
VOID
(*PFN_WPP_PRIVATE_ENABLE_CALLBACK)(
    _In_ LPCGUID Guid,   
    _In_ __int64 Logger, 
    _In_ BOOLEAN Enable, 
    _In_ ULONG Flags,    
    _In_ UCHAR Level);   

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


 
// template control.tpl

//
//     Defines a set of macro that expand control model specified
//     with WPP_CONTROL_GUIDS (example shown below)
//     into an enum of trace levels and required structures that
//     contain the mask of levels, logger handle and some information
//     required for registration.
//

#ifndef WPP_ALREADY_INCLUDED

#define WPP_EVAL(x) x
#define WPP_STR(x)  #x
#define WPP_STRINGIZE(x) WPP_STR(x)
#define WPP_GLUE(a, b)  a ## b
#define WPP_GLUE3(a, b, c)  a ## b ## c
#define WPP_GLUE4(a, b, c, d)  a ## b ## c ## d
#define WPP_XGLUE(a, b) WPP_GLUE(a, b)
#define WPP_XGLUE3(a, b, c) WPP_GLUE3(a, b, c)
#define WPP_XGLUE4(a, b, c, d) WPP_GLUE4(a, b, c, d)

///////////////////////////////////////////////////////////////////////////////////
//
// #define WPP_CONTROL_GUIDS \
//     WPP_DEFINE_CONTROL_GUID(Regular,(81b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Error)      \
//       WPP_DEFINE_BIT(Unusual)    \
//       WPP_DEFINE_BIT(Noise)      \
//    )        \
//    WPP_DEFINE_CONTROL_GUID(HiFreq,(91b20fea,73a8,4b62,95bc,354477c97a6f), \
//       WPP_DEFINE_BIT(Entry)      \
//       WPP_DEFINE_BIT(Exit)       \
//       WPP_DEFINE_BIT(ApiCalls)   \
//       WPP_DEFINE_BIT(RandomJunk) \
//       WPP_DEFINE_BIT(LovePoem)   \
//    )        

#if defined(__cplusplus)
extern "C" {
#endif

#if !defined(WPP_CONTROL_GUIDS)  && defined(WPP_ETW_PROVIDER)
#define WPP_NO_CONTROL_GUIDS
#endif

#if !defined(WPP_NO_CONTROL_GUIDS)

#if defined(WPP_DEFAULT_CONTROL_GUID)
#  if defined(WPP_CONTROL_GUIDS)
#     pragma message(__FILE__ " : error : WPP_DEFAULT_CONTROL_GUID cannot be used together with WPP_CONTROL_GUIDS")
#     stop
#  else
#     define WPP_CONTROL_GUIDS \
         WPP_DEFINE_CONTROL_GUID(Default,(WPP_DEFAULT_CONTROL_GUID), \
         WPP_DEFINE_BIT(Error)   \
         WPP_DEFINE_BIT(Unusual) \
         WPP_DEFINE_BIT(Noise)   \
      )
#  endif      
#endif

#if !defined(WPP_CONTROL_GUIDS)
#  pragma message(__FILE__ " : error : Please define control model via WPP_CONTROL_GUIDS or WPP_DEFAULT_CONTROL_GUID macros")
#  pragma message(__FILE__ " : error : don't forget to call WPP_INIT_TRACING and WPP_CLEANUP in your main, DriverEntry or DllInit")
#  pragma message(__FILE__ " : error : see tracewpp.doc for further information")
stop.
#endif
// a set of macro to convert a guid in a form x(81b20fea,73a8,4b62,95bc,354477c97a6f)
// into either a a struct or text string

#define _WPPW(x) WPP_GLUE(L, x)

#define WPP_GUID_NORM(l,w1,w2,w3,ll) l ## w1 ## w2 ## w3 ## ll
#define WPP_GUID_TEXT(l,w1,w2,w3,ll) #l "-" #w1 "-" #w2 "-" #w3 "-" #ll
#define WPP_GUID_WTEXT(l,w1,w2,w3,ll) _WPPW(#l) L"-" _WPPW(#w1) L"-" _WPPW(#w2) L"-" _WPPW(#w3) L"-" _WPPW(#ll)
#define WPP_EXTRACT_BYTE(val,n) (((ULONGLONG)(0x ## val) >> (8 * n)) & 0xFF)
#define WPP_GUID_STRUCT(l,w1,w2,w3,ll) {0x ## l, 0x ## w1, 0x ## w2,\
     {WPP_EXTRACT_BYTE(w3, 1), WPP_EXTRACT_BYTE(w3, 0),\
      WPP_EXTRACT_BYTE(ll, 5), WPP_EXTRACT_BYTE(ll, 4),\
      WPP_EXTRACT_BYTE(ll, 3), WPP_EXTRACT_BYTE(ll, 2),\
      WPP_EXTRACT_BYTE(ll, 1), WPP_EXTRACT_BYTE(ll, 0)} }

#ifndef WPP_FORCEINLINE
#if !defined(WPP_OLDCC)
#define WPP_FORCEINLINE __forceinline
#else
#define WPP_FORCEINLINE __inline
#endif
#endif


// define an enum of control block names
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)),
enum WPP_CTL_NAMES { WPP_CONTROL_GUIDS WPP_LAST_CTL};
#undef WPP_DEFINE_CONTROL_GUID

// define control guids
//////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
extern __declspec(selectany) const GUID WPP_XGLUE4(WPP_, ThisDir, _CTLGUID_, WPP_EVAL(Name)) = WPP_GUID_STRUCT Guid;
WPP_CONTROL_GUIDS
#undef WPP_DEFINE_CONTROL_GUID

// define enums of individual bits
/////
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) \
    WPP_XGLUE(WPP_BLOCK_START_, WPP_EVAL(Name)) = WPP_XGLUE(WPP_CTL_, WPP_EVAL(Name)) * 0x10000, Bits WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name)), 
# define WPP_DEFINE_BIT(Name) WPP_BIT_ ## Name,
enum WPP_DEFINE_BIT_NAMES { WPP_CONTROL_GUIDS };
# undef WPP_DEFINE_BIT
#undef WPP_DEFINE_CONTROL_GUID

#define WPP_MASK(CTL)    (1 << ( ((CTL)-1) & 31 ))
#define WPP_FLAG_NO(CTL) ( (0xFFFF & ((CTL)-1) ) / 32)
#define WPP_CTRL_NO(CTL) ((CTL) >> 16)

// calculate how many DWORDs we need to get the required number of bits
// upper estimate. Sometimes will be off by one
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) | WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name))
enum _WPP_FLAG_LEN_ENUM { WPP_FLAG_LEN = 1 | ((0 WPP_CONTROL_GUIDS) & 0xFFFF) / 32 };
#undef WPP_DEFINE_CONTROL_GUID

//
// Check that maximum number of flags does not exceed 32
//
#ifndef C_ASSERT
#define C_ASSERT(e) typedef char __C_ASSERT__[(e)?1:-1]
#endif

#define MAX_NUMBER_OF_ETW_FLAGS 34 // 32 flags plus 2 separators
#define WPP_DEFINE_CONTROL_GUID(Name,Guid,Bits) && ((WPP_XGLUE(WPP_BLOCK_END_, WPP_EVAL(Name) & 0xFFFF)) < MAX_NUMBER_OF_ETW_FLAGS)
enum _WPP_FLAG_LEN_ENUM_MAX { WPP_MAX_FLAG_LEN_CHECK = (1 WPP_CONTROL_GUIDS) }; 
#undef WPP_DEFINE_CONTROL_GUID

#ifndef WPP_CB
#  define WPP_CB      WPP_GLOBAL_Control
#endif
#ifndef WPP_CB_TYPE
#define WPP_CB_TYPE WPP_PROJECT_CONTROL_BLOCK
#endif

typedef union {
    WPP_TRACE_CONTROL_BLOCK Control;      
    UCHAR ReserveSpace[ sizeof(WPP_TRACE_CONTROL_BLOCK) + sizeof(ULONG) * (WPP_FLAG_LEN - 1) ];
} WPP_CB_TYPE ;

 
extern __declspec(selectany) WPP_CB_TYPE *WPP_CB = (WPP_CB_TYPE*)&WPP_CB;

#define WPP_CONTROL(CTL) (WPP_CB[WPP_CTRL_NO(CTL)].Control)

#ifndef WPP_USE_TRACE_LEVELS
// For historical reasons the use of LEVEL could imply flags, this was a bad choice but very difficult
// to undo.
#if !defined(WPP_LEVEL_LOGGER)
#  define WPP_LEVEL_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif

#if !defined(WPP_LEVEL_ENABLED)
#  define WPP_LEVEL_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif
#else  //  #ifndef WPP_USE_TRACE_LEVELS
#if !defined(WPP_LEVEL_LOGGER)
#define WPP_LEVEL_LOGGER(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Logger),
#endif

#if !defined(WPP_LEVEL_ENABLED)
#define WPP_LEVEL_ENABLED(lvl) (WPP_CONTROL(WPP_BIT_ ## DUMMY).Level >= lvl)
#endif
#endif  // #ifndef WPP_USE_TRACE_LEVELS

#if !defined(WPP_FLAG_LOGGER)
#  define WPP_FLAG_LOGGER(CTL)  (WPP_CONTROL(WPP_BIT_ ## CTL).Logger), 
#endif


#if !defined(WPP_FLAG_ENABLED)
#  define WPP_FLAG_ENABLED(CTL) (WPP_CONTROL(WPP_BIT_ ## CTL).Flags[WPP_FLAG_NO(WPP_BIT_ ## CTL)] & WPP_MASK(WPP_BIT_ ## CTL)) 
#endif


#ifndef WPP_ENABLED
#  define WPP_ENABLED() 1
#endif
#ifndef WPP_LOGGER
#  define WPP_LOGGER() (WPP_CB[0].Control.Logger),
#endif

#endif // WPP_NO_CONTROL_GUIDS

#if !defined(WPP_GET_LOGGER)
#  define WPP_GET_LOGGER Logger
#endif

#if !defined(WPP_LOGGER_ARG)
#  define WPP_LOGGER_ARG TRACEHANDLE Logger,
#endif

#if defined(__cplusplus)
};
#endif

#endif  // #ifndef WPP_ALREADY_INCLUDED


#if ENABLE_WPP_RECORDER
// template tracemacro-ifr.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c103
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c113
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c125
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c133
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c146
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c158
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c172
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c176
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c181
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c192
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c197
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c203
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c209
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c228
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c239
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c270
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c281
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c309
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c310
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c339
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c344
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c359
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c360
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c387
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c403
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c410
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c421
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c427
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c434
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c449
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c457
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c468
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c487
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c496
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c503
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c511
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c519
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c527
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c536
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c547
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c550
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c558
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c563
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c570
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c577
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c586
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c596
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c599
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c607
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c613
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c620
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c627
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c636
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c648
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c653
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c666
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c670
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c674
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c698
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c723
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c731
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c739
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c744
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c747
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c756
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c90
#endif
#ifdef WPP_EMIT_FUNC_NAME
#define WPP_FUNC_NAME L" FUNC=" _WPPW(__FUNCTION__)
#else
#define WPP_FUNC_NAME
#endif

#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c103_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0Error: no filename given.\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c103_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0Error: no filename given.\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c103
    #define WPP_ANNOTATE_file_io_c103 WPP_ANNOTATE_file_io_c103_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c103 WPP_ANNOTATE_file_io_c103_FINAL("TMF:", "file_io.c", "file_io_c103", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c113_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0Error: invalid device node given: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c113_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0Error: invalid device node given: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c113
    #define WPP_ANNOTATE_file_io_c113 WPP_ANNOTATE_file_io_c113_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c113 WPP_ANNOTATE_file_io_c113_FINAL("TMF:", "file_io.c", "file_io_c113", L"{", L"fileName, ItemPWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c125_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0Failed to create 'user' device file. User BAR does not exist!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c125_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0Failed to create 'user' device file. User BAR does not exist!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c125
    #define WPP_ANNOTATE_file_io_c125 WPP_ANNOTATE_file_io_c125_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c125 WPP_ANNOTATE_file_io_c125_FINAL("TMF:", "file_io.c", "file_io_c125", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c133_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0Failed to create 'bypass' device file. User BAR does not exist!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c133_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0Failed to create 'bypass' device file. User BAR does not exist!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c133
    #define WPP_ANNOTATE_file_io_c133 WPP_ANNOTATE_file_io_c133_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c133 WPP_ANNOTATE_file_io_c133_FINAL("TMF:", "file_io.c", "file_io_c133", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c146_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0Error: engine %10!s!_%11!d! not enabled in XDMA IP core\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c146_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0Error: engine %10!s!_%11!d! not enabled in XDMA IP core\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c146
    #define WPP_ANNOTATE_file_io_c146 WPP_ANNOTATE_file_io_c146_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c146 WPP_ANNOTATE_file_io_c146_FINAL("TMF:", "file_io.c", "file_io_c146", L"{", L"dir == H2C ? 'h2c' : 'c2h', ItemString -- 10" , L"index, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c158_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0pollMode=%10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c158_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0pollMode=%10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c158
    #define WPP_ANNOTATE_file_io_c158 WPP_ANNOTATE_file_io_c158_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c158 WPP_ANNOTATE_file_io_c158_FINAL("TMF:", "file_io.c", "file_io_c158", L"{", L"devNode->u.engine->poll, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c172_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0Created %10!s! device file\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c172_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0Created %10!s! device file\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c172
    #define WPP_ANNOTATE_file_io_c172 WPP_ANNOTATE_file_io_c172_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c172 WPP_ANNOTATE_file_io_c172_FINAL("TMF:", "file_io.c", "file_io_c172", L"{", L"fileName, ItemPWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c176_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0returns %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c176_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0returns %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c176
    #define WPP_ANNOTATE_file_io_c176 WPP_ANNOTATE_file_io_c176_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c176 WPP_ANNOTATE_file_io_c176_FINAL("TMF:", "file_io.c", "file_io_c176", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c181_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0Closing file %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c181_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0Closing file %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c181
    #define WPP_ANNOTATE_file_io_c181 WPP_ANNOTATE_file_io_c181_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c181 WPP_ANNOTATE_file_io_c181_FINAL("TMF:", "file_io.c", "file_io_c181", L"{", L"fileName, ItemPWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c192_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0Cleanup %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c192_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0Cleanup %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c192
    #define WPP_ANNOTATE_file_io_c192 WPP_ANNOTATE_file_io_c192_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c192 WPP_ANNOTATE_file_io_c192_FINAL("TMF:", "file_io.c", "file_io_c192", L"{", L"fileName, ItemPWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c197_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0Error: attempting to read 0 bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c197_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0Error: attempting to read 0 bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c197
    #define WPP_ANNOTATE_file_io_c197 WPP_ANNOTATE_file_io_c197_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c197 WPP_ANNOTATE_file_io_c197_FINAL("TMF:", "file_io.c", "file_io_c197", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c203_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0Error: attempting to read BAR %10!u! but only 2 exist\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c203_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0Error: attempting to read BAR %10!u! but only 2 exist\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c203
    #define WPP_ANNOTATE_file_io_c203 WPP_ANNOTATE_file_io_c203_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c203 WPP_ANNOTATE_file_io_c203_FINAL("TMF:", "file_io.c", "file_io_c203", L"{", L"nBar, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c209_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0Error: attempting to read BAR %10!u! offset=%11!I64u! size=%12!I64u!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c209_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0Error: attempting to read BAR %10!u! offset=%11!I64u! size=%12!I64u!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c209
    #define WPP_ANNOTATE_file_io_c209 WPP_ANNOTATE_file_io_c209_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemULongLong -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c209 WPP_ANNOTATE_file_io_c209_FINAL("TMF:", "file_io.c", "file_io_c209", L"{", L"nBar, ItemLong -- 10" , L"offset, ItemULongLong -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c228_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0Error: attempting to read 0 bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c228_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0Error: attempting to read 0 bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c228
    #define WPP_ANNOTATE_file_io_c228 WPP_ANNOTATE_file_io_c228_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c228 WPP_ANNOTATE_file_io_c228_FINAL("TMF:", "file_io.c", "file_io_c228", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c239_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c239_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c239
    #define WPP_ANNOTATE_file_io_c239 WPP_ANNOTATE_file_io_c239_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c239 WPP_ANNOTATE_file_io_c239_FINAL("TMF:", "file_io.c", "file_io_c239", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c270_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0Error: attempting to read 0 bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c270_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0Error: attempting to read 0 bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c270
    #define WPP_ANNOTATE_file_io_c270 WPP_ANNOTATE_file_io_c270_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c270 WPP_ANNOTATE_file_io_c270_FINAL("TMF:", "file_io.c", "file_io_c270", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c281_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0WdfRequestRetrieveInputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c281_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0WdfRequestRetrieveInputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c281
    #define WPP_ANNOTATE_file_io_c281 WPP_ANNOTATE_file_io_c281_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c281 WPP_ANNOTATE_file_io_c281_FINAL("TMF:", "file_io.c", "file_io_c281", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c309_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0(Queue=%10!p!, Request=%11!p!, Length=%12!I64u!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c309_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0(Queue=%10!p!, Request=%11!p!, Length=%12!I64u!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c309
    #define WPP_ANNOTATE_file_io_c309 WPP_ANNOTATE_file_io_c309_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c309 WPP_ANNOTATE_file_io_c309_FINAL("TMF:", "file_io.c", "file_io_c309", L"{", L"queue, ItemPtr -- 10" , L"request, ItemPtr -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c310_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0devNodeType %10!d!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c310_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0devNodeType %10!d!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c310
    #define WPP_ANNOTATE_file_io_c310 WPP_ANNOTATE_file_io_c310_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c310 WPP_ANNOTATE_file_io_c310_FINAL("TMF:", "file_io.c", "file_io_c310", L"{", L"file->devType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c339_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0fails with invalid DevNodeID %10!d!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c339_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0fails with invalid DevNodeID %10!d!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c339
    #define WPP_ANNOTATE_file_io_c339 WPP_ANNOTATE_file_io_c339_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c339 WPP_ANNOTATE_file_io_c339_FINAL("TMF:", "file_io.c", "file_io_c339", L"{", L"file->devType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c344_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0request complete with %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c344_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0request complete with %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c344
    #define WPP_ANNOTATE_file_io_c344 WPP_ANNOTATE_file_io_c344_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c344 WPP_ANNOTATE_file_io_c344_FINAL("TMF:", "file_io.c", "file_io_c344", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c359_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0(Queue=%10!p!, Request=%11!p!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c359_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0(Queue=%10!p!, Request=%11!p!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c359
    #define WPP_ANNOTATE_file_io_c359 WPP_ANNOTATE_file_io_c359_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c359 WPP_ANNOTATE_file_io_c359_FINAL("TMF:", "file_io.c", "file_io_c359", L"{", L"queue, ItemPtr -- 10" , L"request, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c360_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0DevNodeID %10!d!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c360_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0DevNodeID %10!d!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c360
    #define WPP_ANNOTATE_file_io_c360 WPP_ANNOTATE_file_io_c360_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c360 WPP_ANNOTATE_file_io_c360_FINAL("TMF:", "file_io.c", "file_io_c360", L"{", L"file->devType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c387_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0Error Request 0x%10!p!: %11!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c387_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0Error Request 0x%10!p!: %11!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c387
    #define WPP_ANNOTATE_file_io_c387 WPP_ANNOTATE_file_io_c387_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemNTSTATUS -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c387 WPP_ANNOTATE_file_io_c387_FINAL("TMF:", "file_io.c", "file_io_c387", L"{", L"request, ItemPtr -- 10" , L"status, ItemNTSTATUS -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c403_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c403_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c403
    #define WPP_ANNOTATE_file_io_c403 WPP_ANNOTATE_file_io_c403_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c403 WPP_ANNOTATE_file_io_c403_FINAL("TMF:", "file_io.c", "file_io_c403", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c410_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c410_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c410
    #define WPP_ANNOTATE_file_io_c410 WPP_ANNOTATE_file_io_c410_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c410 WPP_ANNOTATE_file_io_c410_FINAL("TMF:", "file_io.c", "file_io_c410", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c421_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0addrMode=%10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c421_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0addrMode=%10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c421
    #define WPP_ANNOTATE_file_io_c421 WPP_ANNOTATE_file_io_c421_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c421 WPP_ANNOTATE_file_io_c421_FINAL("TMF:", "file_io.c", "file_io_c421", L"{", L"addrMode, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c427_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c427_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c427
    #define WPP_ANNOTATE_file_io_c427 WPP_ANNOTATE_file_io_c427_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c427 WPP_ANNOTATE_file_io_c427_FINAL("TMF:", "file_io.c", "file_io_c427", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c434_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c434_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c434
    #define WPP_ANNOTATE_file_io_c434 WPP_ANNOTATE_file_io_c434_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c434 WPP_ANNOTATE_file_io_c434_FINAL("TMF:", "file_io.c", "file_io_c434", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c449_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c449_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c449
    #define WPP_ANNOTATE_file_io_c449 WPP_ANNOTATE_file_io_c449_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c449 WPP_ANNOTATE_file_io_c449_FINAL("TMF:", "file_io.c", "file_io_c449", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c457_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c457_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c457
    #define WPP_ANNOTATE_file_io_c457 WPP_ANNOTATE_file_io_c457_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c457 WPP_ANNOTATE_file_io_c457_FINAL("TMF:", "file_io.c", "file_io_c457", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c468_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0addrMode=%10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c468_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0addrMode=%10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c468
    #define WPP_ANNOTATE_file_io_c468 WPP_ANNOTATE_file_io_c468_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c468 WPP_ANNOTATE_file_io_c468_FINAL("TMF:", "file_io.c", "file_io_c468", L"{", L"addrMode, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c487_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0IOCTL only supported on DMA files (hc2_* or c2h_* devices)\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c487_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0IOCTL only supported on DMA files (hc2_* or c2h_* devices)\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c487
    #define WPP_ANNOTATE_file_io_c487 WPP_ANNOTATE_file_io_c487_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c487 WPP_ANNOTATE_file_io_c487_FINAL("TMF:", "file_io.c", "file_io_c487", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c496_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0%10!s!_%11!u! IOCTL_XDMA_PERF_START\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c496_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0%10!s!_%11!u! IOCTL_XDMA_PERF_START\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c496
    #define WPP_ANNOTATE_file_io_c496 WPP_ANNOTATE_file_io_c496_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c496 WPP_ANNOTATE_file_io_c496_FINAL("TMF:", "file_io.c", "file_io_c496", L"{", L"queue->engine->dir == H2C ? 'H2C' : 'C2H', ItemString -- 10" , L"queue->engine->channel, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c503_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0%10!s!_%11!u! IOCTL_XDMA_PERF_GET\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c503_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0%10!s!_%11!u! IOCTL_XDMA_PERF_GET\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c503
    #define WPP_ANNOTATE_file_io_c503 WPP_ANNOTATE_file_io_c503_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c503 WPP_ANNOTATE_file_io_c503_FINAL("TMF:", "file_io.c", "file_io_c503", L"{", L"queue->engine->dir == H2C ? 'H2C' : 'C2H', ItemString -- 10" , L"queue->engine->channel, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c511_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0%10!s!_%11!u! IOCTL_XDMA_ADDRMODE_GET\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c511_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0%10!s!_%11!u! IOCTL_XDMA_ADDRMODE_GET\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c511
    #define WPP_ANNOTATE_file_io_c511 WPP_ANNOTATE_file_io_c511_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c511 WPP_ANNOTATE_file_io_c511_FINAL("TMF:", "file_io.c", "file_io_c511", L"{", L"queue->engine->dir == H2C ? 'H2C' : 'C2H', ItemString -- 10" , L"queue->engine->channel, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c519_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0%10!s!_%11!u! IOCTL_XDMA_ADDRMODE_SET\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c519_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0%10!s!_%11!u! IOCTL_XDMA_ADDRMODE_SET\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c519
    #define WPP_ANNOTATE_file_io_c519 WPP_ANNOTATE_file_io_c519_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c519 WPP_ANNOTATE_file_io_c519_FINAL("TMF:", "file_io.c", "file_io_c519", L"{", L"queue->engine->dir == H2C ? 'H2C' : 'C2H', ItemString -- 10" , L"queue->engine->channel, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c527_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0Unknown IOCTL code!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c527_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0Unknown IOCTL code!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c527
    #define WPP_ANNOTATE_file_io_c527 WPP_ANNOTATE_file_io_c527_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c527 WPP_ANNOTATE_file_io_c527_FINAL("TMF:", "file_io.c", "file_io_c527", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c536_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0exit with status: %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c536_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0exit with status: %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c536
    #define WPP_ANNOTATE_file_io_c536 WPP_ANNOTATE_file_io_c536_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c536 WPP_ANNOTATE_file_io_c536_FINAL("TMF:", "file_io.c", "file_io_c536", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c547_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0%!FUNC!(queue=%10!p!, request=%11!p!, length=%12!I64u!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c547_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0%!FUNC!(queue=%10!p!, request=%11!p!, length=%12!I64u!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c547
    #define WPP_ANNOTATE_file_io_c547 WPP_ANNOTATE_file_io_c547_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c547 WPP_ANNOTATE_file_io_c547_FINAL("TMF:", "file_io.c", "file_io_c547", L"{", L"wdfQueue, ItemPtr -- 10" , L"Request, ItemPtr -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c550_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0%10!s!_%11!u! writing %12!I64u! bytes to device\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c550_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0%10!s!_%11!u! writing %12!I64u! bytes to device\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c550
    #define WPP_ANNOTATE_file_io_c550 WPP_ANNOTATE_file_io_c550_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c550 WPP_ANNOTATE_file_io_c550_FINAL("TMF:", "file_io.c", "file_io_c550", L"{", L"DirectionToString(engine->dir), ItemString -- 10" , L"engine->channel, ItemLong -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c558_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0WdfDmaTransactionInitializeUsingRequest failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c558_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0WdfDmaTransactionInitializeUsingRequest failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c558
    #define WPP_ANNOTATE_file_io_c558 WPP_ANNOTATE_file_io_c558_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c558 WPP_ANNOTATE_file_io_c558_FINAL("TMF:", "file_io.c", "file_io_c558", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c563_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0WdfRequestMarkCancelableEx failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c563_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0WdfRequestMarkCancelableEx failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c563
    #define WPP_ANNOTATE_file_io_c563 WPP_ANNOTATE_file_io_c563_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c563 WPP_ANNOTATE_file_io_c563_FINAL("TMF:", "file_io.c", "file_io_c563", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c570_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0WdfDmaTransactionExecute failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c570_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0WdfDmaTransactionExecute failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c570
    #define WPP_ANNOTATE_file_io_c570 WPP_ANNOTATE_file_io_c570_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c570 WPP_ANNOTATE_file_io_c570_FINAL("TMF:", "file_io.c", "file_io_c570", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c577_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0EnginePollTransfer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c577_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0EnginePollTransfer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c577
    #define WPP_ANNOTATE_file_io_c577 WPP_ANNOTATE_file_io_c577_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c577 WPP_ANNOTATE_file_io_c577_FINAL("TMF:", "file_io.c", "file_io_c577", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c586_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0Error Request 0x%10!p!: %11!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c586_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0Error Request 0x%10!p!: %11!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c586
    #define WPP_ANNOTATE_file_io_c586 WPP_ANNOTATE_file_io_c586_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemNTSTATUS -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c586 WPP_ANNOTATE_file_io_c586_FINAL("TMF:", "file_io.c", "file_io_c586", L"{", L"Request, ItemPtr -- 10" , L"status, ItemNTSTATUS -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c596_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0%!FUNC!(queue=%10!p!, request=%11!p!, length=%12!I64u!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c596_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0%!FUNC!(queue=%10!p!, request=%11!p!, length=%12!I64u!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c596
    #define WPP_ANNOTATE_file_io_c596 WPP_ANNOTATE_file_io_c596_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c596 WPP_ANNOTATE_file_io_c596_FINAL("TMF:", "file_io.c", "file_io_c596", L"{", L"wdfQueue, ItemPtr -- 10" , L"Request, ItemPtr -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c599_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0%10!s!_%11!u! reading %12!I64u! bytes from device\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c599_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0%10!s!_%11!u! reading %12!I64u! bytes from device\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c599
    #define WPP_ANNOTATE_file_io_c599 WPP_ANNOTATE_file_io_c599_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c599 WPP_ANNOTATE_file_io_c599_FINAL("TMF:", "file_io.c", "file_io_c599", L"{", L"DirectionToString(engine->dir), ItemString -- 10" , L"engine->channel, ItemLong -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c607_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0WdfDmaTransactionInitializeUsingRequest failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c607_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0WdfDmaTransactionInitializeUsingRequest failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c607
    #define WPP_ANNOTATE_file_io_c607 WPP_ANNOTATE_file_io_c607_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c607 WPP_ANNOTATE_file_io_c607_FINAL("TMF:", "file_io.c", "file_io_c607", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c613_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0WdfRequestMarkCancelableEx failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c613_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0WdfRequestMarkCancelableEx failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c613
    #define WPP_ANNOTATE_file_io_c613 WPP_ANNOTATE_file_io_c613_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c613 WPP_ANNOTATE_file_io_c613_FINAL("TMF:", "file_io.c", "file_io_c613", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c620_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0WdfDmaTransactionExecute failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c620_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0WdfDmaTransactionExecute failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c620
    #define WPP_ANNOTATE_file_io_c620 WPP_ANNOTATE_file_io_c620_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c620 WPP_ANNOTATE_file_io_c620_FINAL("TMF:", "file_io.c", "file_io_c620", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c627_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0EnginePollTransfer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c627_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0EnginePollTransfer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c627
    #define WPP_ANNOTATE_file_io_c627 WPP_ANNOTATE_file_io_c627_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c627 WPP_ANNOTATE_file_io_c627_FINAL("TMF:", "file_io.c", "file_io_c627", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c636_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0Error Request 0x%10!p!: %11!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c636_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0Error Request 0x%10!p!: %11!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c636
    #define WPP_ANNOTATE_file_io_c636 WPP_ANNOTATE_file_io_c636_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemNTSTATUS -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c636 WPP_ANNOTATE_file_io_c636_FINAL("TMF:", "file_io.c", "file_io_c636", L"{", L"Request, ItemPtr -- 10" , L"status, ItemNTSTATUS -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c648_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c648_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c648
    #define WPP_ANNOTATE_file_io_c648 WPP_ANNOTATE_file_io_c648_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c648 WPP_ANNOTATE_file_io_c648_FINAL("TMF:", "file_io.c", "file_io_c648", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c653_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0%10!s!_%11!u! requesting %12!I64u! bytes from ring buffer\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c653_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0%10!s!_%11!u! requesting %12!I64u! bytes from ring buffer\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c653
    #define WPP_ANNOTATE_file_io_c653 WPP_ANNOTATE_file_io_c653_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c653 WPP_ANNOTATE_file_io_c653_FINAL("TMF:", "file_io.c", "file_io_c653", L"{", L"DirectionToString(engine->dir), ItemString -- 10" , L"engine->channel, ItemLong -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c666_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0Request 0x%10!p! from Queue 0x%11!p!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c666_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0Request 0x%10!p! from Queue 0x%11!p!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c666
    #define WPP_ANNOTATE_file_io_c666 WPP_ANNOTATE_file_io_c666_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c666 WPP_ANNOTATE_file_io_c666_FINAL("TMF:", "file_io.c", "file_io_c666", L"{", L"request, ItemPtr -- 10" , L"queue, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c670_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0WdfRequestUnmarkCancelable failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c670_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0WdfRequestUnmarkCancelable failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c670
    #define WPP_ANNOTATE_file_io_c670 WPP_ANNOTATE_file_io_c670_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c670 WPP_ANNOTATE_file_io_c670_FINAL("TMF:", "file_io.c", "file_io_c670", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c674_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0WdfDmaTransactionRelease failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c674_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0WdfDmaTransactionRelease failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c674
    #define WPP_ANNOTATE_file_io_c674 WPP_ANNOTATE_file_io_c674_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c674 WPP_ANNOTATE_file_io_c674_FINAL("TMF:", "file_io.c", "file_io_c674", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c698_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0Error: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c698_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0Error: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c698
    #define WPP_ANNOTATE_file_io_c698 WPP_ANNOTATE_file_io_c698_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c698 WPP_ANNOTATE_file_io_c698_FINAL("TMF:", "file_io.c", "file_io_c698", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c723_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c723_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c723
    #define WPP_ANNOTATE_file_io_c723 WPP_ANNOTATE_file_io_c723_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c723 WPP_ANNOTATE_file_io_c723_FINAL("TMF:", "file_io.c", "file_io_c723", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c731_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0Error: length is %10!I64u! but must be %11!I64u!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c731_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0Error: length is %10!I64u! but must be %11!I64u!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c731
    #define WPP_ANNOTATE_file_io_c731 WPP_ANNOTATE_file_io_c731_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemULongLong -- 10" , L"Arg, ItemULongLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c731 WPP_ANNOTATE_file_io_c731_FINAL("TMF:", "file_io.c", "file_io_c731", L"{", L"bufSize, ItemULongLong -- 10" , L"sizeof(UINT32), ItemULongLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c739_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c739_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c739
    #define WPP_ANNOTATE_file_io_c739 WPP_ANNOTATE_file_io_c739_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c739 WPP_ANNOTATE_file_io_c739_FINAL("TMF:", "file_io.c", "file_io_c739", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c744_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0user events returned is 0x%10!08X!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c744_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0user events returned is 0x%10!08X!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c744
    #define WPP_ANNOTATE_file_io_c744 WPP_ANNOTATE_file_io_c744_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c744 WPP_ANNOTATE_file_io_c744_FINAL("TMF:", "file_io.c", "file_io_c744", L"{", L"eventValue, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c747_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0user EP=0x%10!08X!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c747_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0user EP=0x%10!08X!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c747
    #define WPP_ANNOTATE_file_io_c747 WPP_ANNOTATE_file_io_c747_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c747 WPP_ANNOTATE_file_io_c747_FINAL("TMF:", "file_io.c", "file_io_c747", L"{", L"eventValue, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c756_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0event_%10!u! signaling completion\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c756_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0event_%10!u! signaling completion\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c756
    #define WPP_ANNOTATE_file_io_c756 WPP_ANNOTATE_file_io_c756_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c756 WPP_ANNOTATE_file_io_c756_FINAL("TMF:", "file_io.c", "file_io_c756", L"{", L"eventId, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c90_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0GetDevNodeID() returns ID_DEVNODE_UNKNOWN\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c90_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0GetDevNodeID() returns ID_DEVNODE_UNKNOWN\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c90
    #define WPP_ANNOTATE_file_io_c90 WPP_ANNOTATE_file_io_c90_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c90 WPP_ANNOTATE_file_io_c90_FINAL("TMF:", "file_io.c", "file_io_c90", L"{", L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif


#if 1
#if !defined(WPP_USER_MSG_GUID)

#define WPP_LOCAL_TraceGuids WPP_4a1070dbaf30398b7bcc50430100a208_Traceguids
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0x4a1070db,0xaf30,0x398b,{0x7b,0xcc,0x50,0x43,0x01,0x00,0xa2,0x08}}, };

#else

#define WPP_LOCAL_MSG_VAR(Guid) WPP_XGLUE3(WPP_, WPP_GUID_NORM Guid, _Traceguids)

#define WPP_LOCAL_MSG_GUID(Guid) \
extern const __declspec(selectany) GUID WPP_LOCAL_MSG_VAR(Guid)[] = { WPP_GUID_STRUCT Guid }

WPP_LOCAL_MSG_GUID(WPP_USER_MSG_GUID);
#define WPP_LOCAL_TraceGuids WPP_LOCAL_MSG_VAR(WPP_USER_MSG_GUID)

#endif
#endif

#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#ifndef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR ,
#endif
#ifndef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET SIZE_T
#endif
#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((WPP_LOGPAIR_SIZET)(_Size))WPP_LOGPAIR_SEPARATOR
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_ENABLE_FLAG_BIT)
#define WPP_ENABLE_FLAG_BIT(flag) (WPP_CB[((flag) >> 16)].Control).Flags[( (0xFFFF & ((flag)-1) ) / 32)] & (1 << ( ((flag)-1) & 31 ))
#endif

#ifndef WPP_SF__def
#       define WPP_SF__def
WPP_INLINE void WPP_SF_(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id,  (void*)0); }
#endif  // #ifndef WPP_SF__def


//
// Generate the WPP_RECORDER_SP_ function    2
//
#ifndef WPP_RECORDER_SF__def
#       define WPP_RECORDER_SF__def
WPP_INLINE
VOID
WPP_RECORDER_SF_(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                    (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id,  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF__def


#ifndef WPP_SF_D_def
#       define WPP_SF_D_def
WPP_INLINE void WPP_SF_D(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1)  (void*)0); }
#endif  // #ifndef WPP_SF_D_def


//
// Generate the WPP_RECORDER_SP_D function    2
//
#ifndef WPP_RECORDER_SF_D_def
#       define WPP_RECORDER_SF_D_def
WPP_INLINE
VOID
WPP_RECORDER_SF_D(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int,_a1)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_D_def


#ifndef WPP_SF_DII_def
#       define WPP_SF_DII_def
WPP_INLINE void WPP_SF_DII(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned __int64 _a2, unsigned __int64 _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned __int64,_a2) WPP_LOGTYPEVAL(unsigned __int64,_a3)  (void*)0); }
#endif  // #ifndef WPP_SF_DII_def


//
// Generate the WPP_RECORDER_SP_DII function    2
//
#ifndef WPP_RECORDER_SF_DII_def
#       define WPP_RECORDER_SF_DII_def
WPP_INLINE
VOID
WPP_RECORDER_SF_DII(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned int _a1, unsigned __int64 _a2, unsigned __int64 _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned __int64,_a2) WPP_LOGTYPEVAL(unsigned __int64,_a3)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned __int64,_a2) WPP_LOGTYPEVAL(unsigned __int64,_a3)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_DII_def


#ifndef WPP_SF_II_def
#       define WPP_SF_II_def
WPP_INLINE void WPP_SF_II(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned __int64 _a1, unsigned __int64 _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned __int64,_a1) WPP_LOGTYPEVAL(unsigned __int64,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_II_def


//
// Generate the WPP_RECORDER_SP_II function    2
//
#ifndef WPP_RECORDER_SF_II_def
#       define WPP_RECORDER_SF_II_def
WPP_INLINE
VOID
WPP_RECORDER_SF_II(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , unsigned __int64 _a1, unsigned __int64 _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(unsigned __int64,_a1) WPP_LOGTYPEVAL(unsigned __int64,_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(unsigned __int64,_a1) WPP_LOGTYPEVAL(unsigned __int64,_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_II_def


#ifndef WPP_SF_Z_def
#       define WPP_SF_Z_def
WPP_INLINE void WPP_SF_Z(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, PCUNICODE_STRING _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGPUSTR(_a1)  (void*)0); }
#endif  // #ifndef WPP_SF_Z_def


//
// Generate the WPP_RECORDER_SP_Z function    2
//
#ifndef WPP_RECORDER_SF_Z_def
#       define WPP_RECORDER_SF_Z_def
WPP_INLINE
VOID
WPP_RECORDER_SF_Z(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , PCUNICODE_STRING _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGPUSTR(_a1)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGPUSTR(_a1)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_Z_def


#ifndef WPP_SF_d_def
#       define WPP_SF_d_def
WPP_INLINE void WPP_SF_d(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int,_a1)  (void*)0); }
#endif  // #ifndef WPP_SF_d_def


//
// Generate the WPP_RECORDER_SP_d function    2
//
#ifndef WPP_RECORDER_SF_d_def
#       define WPP_RECORDER_SF_d_def
WPP_INLINE
VOID
WPP_RECORDER_SF_d(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , signed int _a1
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(signed int,_a1)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(signed int,_a1)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_d_def


#ifndef WPP_SF_qd_def
#       define WPP_SF_qd_def
WPP_INLINE void WPP_SF_qd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(signed int,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_qd_def


//
// Generate the WPP_RECORDER_SP_qd function    2
//
#ifndef WPP_RECORDER_SF_qd_def
#       define WPP_RECORDER_SF_qd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_qd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const void* _a1, signed int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(signed int,_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(signed int,_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_qd_def


#ifndef WPP_SF_qq_def
#       define WPP_SF_qq_def
WPP_INLINE void WPP_SF_qq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_qq_def


//
// Generate the WPP_RECORDER_SP_qq function    2
//
#ifndef WPP_RECORDER_SF_qq_def
#       define WPP_RECORDER_SF_qq_def
WPP_INLINE
VOID
WPP_RECORDER_SF_qq(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const void* _a1, const void* _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_qq_def


#ifndef WPP_SF_qqI_def
#       define WPP_SF_qqI_def
WPP_INLINE void WPP_SF_qqI(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, const void* _a2, unsigned __int64 _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned __int64,_a3)  (void*)0); }
#endif  // #ifndef WPP_SF_qqI_def


//
// Generate the WPP_RECORDER_SP_qqI function    2
//
#ifndef WPP_RECORDER_SF_qqI_def
#       define WPP_RECORDER_SF_qqI_def
WPP_INLINE
VOID
WPP_RECORDER_SF_qqI(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const void* _a1, const void* _a2, unsigned __int64 _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned __int64,_a3)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned __int64,_a3)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_qqI_def


#ifndef WPP_SF_sD_def
#       define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_sD_def


//
// Generate the WPP_RECORDER_SP_sD function    2
//
#ifndef WPP_RECORDER_SF_sD_def
#       define WPP_RECORDER_SF_sD_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sD(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_sD_def


#ifndef WPP_SF_sDI_def
#       define WPP_SF_sDI_def
WPP_INLINE void WPP_SF_sDI(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned __int64 _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned __int64,_a3)  (void*)0); }
#endif  // #ifndef WPP_SF_sDI_def


//
// Generate the WPP_RECORDER_SP_sDI function    2
//
#ifndef WPP_RECORDER_SF_sDI_def
#       define WPP_RECORDER_SF_sDI_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sDI(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, unsigned int _a2, unsigned __int64 _a3
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned __int64,_a3)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned __int64,_a3)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_sDI_def


#ifndef WPP_SF_sd_def
#       define WPP_SF_sd_def
WPP_INLINE void WPP_SF_sd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_sd_def


//
// Generate the WPP_RECORDER_SP_sd function    2
//
#ifndef WPP_RECORDER_SF_sd_def
#       define WPP_RECORDER_SF_sd_def
WPP_INLINE
VOID
WPP_RECORDER_SF_sd(
    PVOID    AutoLogContext,
    UCHAR    level,
    ULONG    flags,
    USHORT   id,
    LPCGUID  traceGuid
    , const char* _a1, signed int _a2
    )
{
    if (WPP_ENABLE_FLAG_BIT(flags) &&
       (WPP_CONTROL(flags).Level >= level)) {
        WPP_TRACE( WPP_CONTROL(flags).Logger,
                   WPP_TRACE_OPTIONS,
                   (LPGUID)traceGuid,
                   id,
                   WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  (void*)0);

    }

    WPP_RECORDER( AutoLogContext, level, flags, (LPGUID) traceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  (void*)0);
}
#endif  // #ifndef WPP_RECORDER_SF_sd_def


#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif

#ifndef WPP_LOG_ALWAYS
#  define WPP_LOG_ALWAYS(...)
#endif

#ifdef WPP_DEBUG
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c103(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c103) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    11, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c113(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c113) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_Z(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    12, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c125(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c125) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    13, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c133(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c133) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    14, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c146(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c146) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_sd(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    15, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c158(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c158) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    16, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c172(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c172) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_Z(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    17, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c176(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c176) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    18, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c181(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c181) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_Z(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    19, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c192(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c192) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_Z(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    20, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c197(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c197) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    21, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c203(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c203) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    22, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c209(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c209) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_DII(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    23, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c228(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c228) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    24, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c239(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c239) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    25, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c270(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c270) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    26, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c281(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c281) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    27, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c309(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c309) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_qqI(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    28, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c310(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c310) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    29, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c339(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c339) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    30, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c344(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c344) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    31, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c359(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c359) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_qq(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    32, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c360(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c360) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    33, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c387(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c387) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_qd(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    34, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c403(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c403) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    35, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c410(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c410) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    36, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c421(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c421) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    37, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c427(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c427) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    38, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c434(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c434) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    39, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c449(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c449) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    40, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c457(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c457) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    41, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c468(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c468) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    42, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c487(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c487) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    43, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c496(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c496) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_sD(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    44, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c503(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c503) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_sD(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    45, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c511(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c511) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_sD(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    46, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c519(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c519) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_sD(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    47, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c527(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c527) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    48, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c536(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c536) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    49, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c547(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c547) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_qqI(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    50, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c550(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c550) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_sDI(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    51, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c558(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c558) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    52, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c563(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c563) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    53, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c570(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c570) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    54, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c577(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c577) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    55, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c586(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c586) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_qd(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    56, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c596(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c596) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_qqI(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    57, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c599(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c599) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_sDI(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    58, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c607(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c607) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    59, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c613(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c613) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    60, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c620(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c620) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    61, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c627(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c627) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    62, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c636(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c636) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_qd(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    63, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c648(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c648) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    64, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c653(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c653) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_RECORDER_SF_sDI(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    65, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c666(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c666) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_qq(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    66, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c670(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c670) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    67, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c674(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c674) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    68, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c698(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c698) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    69, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c723(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c723) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    70, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c731(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c731) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_RECORDER_SF_II(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    71, \
                                    WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c739(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c739) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    72, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c744(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c744) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    73, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c747(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c747) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                    74, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c756(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c756) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                    75, \
                                    WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c90(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c90) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                    10, \
                                    WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#else
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c103(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c103) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     11, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c113(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c113) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_Z(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     12, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c125(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c125) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     13, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c133(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c133) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     14, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c146(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c146) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_sd(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     15, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c158(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c158) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     16, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c172(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c172) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_Z(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     17, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c176(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c176) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     18, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c181(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c181) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_Z(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     19, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c192(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c192) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_Z(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     20, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c197(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c197) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     21, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c203(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c203) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     22, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c209(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c209) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_DII(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     23, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c228(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c228) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     24, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c239(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c239) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     25, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c270(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c270) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     26, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c281(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c281) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     27, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c309(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c309) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_qqI(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     28, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c310(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c310) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     29, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c339(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c339) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     30, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c344(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c344) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     31, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c359(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c359) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_qq(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     32, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c360(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c360) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     33, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c387(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c387) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_qd(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     34, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c403(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c403) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     35, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c410(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c410) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     36, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c421(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c421) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     37, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c427(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c427) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     38, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c434(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c434) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     39, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c449(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c449) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     40, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c457(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c457) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     41, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c468(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c468) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     42, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c487(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c487) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     43, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c496(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c496) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_sD(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     44, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c503(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c503) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_sD(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     45, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c511(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c511) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_sD(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     46, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c519(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c519) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_sD(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     47, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c527(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c527) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     48, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c536(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c536) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     49, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c547(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c547) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_qqI(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     50, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c550(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c550) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_sDI(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     51, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c558(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c558) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     52, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c563(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c563) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     53, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c570(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c570) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     54, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c577(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c577) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     55, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c586(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c586) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_qd(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     56, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c596(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c596) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_qqI(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     57, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c599(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c599) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_sDI(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     58, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c607(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c607) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     59, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c613(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c613) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     60, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c620(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c620) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     61, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c627(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c627) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     62, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c636(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c636) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_qd(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     63, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c648(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c648) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     64, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c653(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c653) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_sDI(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     65, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c666(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c666) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_qq(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     66, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c670(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c670) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     67, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c674(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c674) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     68, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c698(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c698) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     69, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c723(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c723) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     70, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c731(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c731) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_II(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     71, \
                                     WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c739(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c739) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_d(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     72, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c744(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c744) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     73, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c747(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c747) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_VERBOSE, FLAGS), \
                                     74, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c756(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c756) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_RECORDER_SF_D(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_INFORMATION, FLAGS), \
                                     75, \
                                     WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c90(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c90) \
    (( \
        WPP_RECORDER_LEVEL_FLAGS_FILTER(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_RECORDER_SF_(WPP_RECORDER_LEVEL_FLAGS_ARGS(TRACE_LEVEL_ERROR, FLAGS), \
                                     10, \
                                     WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#endif


#ifdef WPP_DEBUG
#else
#endif



#if defined(__cplusplus)
};
#endif

#else
// template tracemacro.tpl

// This template expects:
//      WPP_THIS_FILE defined (see header.tpl)
//      WPP_LOGGER_ARG  defined
//      WPP_GET_LOGGER  defined
//      WPP_ENABLED() defined

#if defined(__cplusplus)
extern "C" {
#endif

#ifndef WPP_ALREADY_INCLUDED

#ifndef NO_CHECK_FOR_NULL_STRING
#ifndef WPP_CHECK_FOR_NULL_STRING
#define WPP_CHECK_FOR_NULL_STRING 1
#endif
#endif

#define WPP_EVAL(_value_) _value_
#define WPP_(Id) WPP_EVAL(WPP_) ## WPP_EVAL(Id) ## WPP_EVAL(_) ## WPP_EVAL(WPP_THIS_FILE) ## WPP_EVAL(__LINE__)

#if !defined(WPP_INLINE)
#define WPP_INLINE DECLSPEC_NOINLINE __inline
#endif

#else   // #ifndef WPP_ALREADY_INCLUDED

#undef WPP_LOCAL_TraceGuids

#endif  // #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_NO_ANNOTATIONS)

#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c103
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c113
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c125
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c133
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c146
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c158
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c172
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c176
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c181
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c192
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c197
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c203
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c209
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c228
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c239
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c270
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c281
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c309
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c310
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c339
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c344
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c359
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c360
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c387
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c403
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c410
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c421
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c427
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c434
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c449
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c457
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c468
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c487
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c496
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c503
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c511
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c519
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c527
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c536
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c547
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c550
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c558
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c563
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c570
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c577
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c586
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c596
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c599
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c607
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c613
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c620
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c627
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c636
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c648
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c653
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c666
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c670
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c674
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c698
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c723
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c731
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c739
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c744
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c747
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c756
#endif
#ifdef WPP_PUBLIC_
#define WPP_PUBLIC_ANNOT_file_io_c90
#endif
#ifdef WPP_EMIT_FUNC_NAME
#define WPP_FUNC_NAME L" FUNC=" _WPPW(__FUNCTION__)
#else
#define WPP_FUNC_NAME
#endif

#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c103_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0Error: no filename given.\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c103_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 11 \"%0Error: no filename given.\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c103
    #define WPP_ANNOTATE_file_io_c103 WPP_ANNOTATE_file_io_c103_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c103 WPP_ANNOTATE_file_io_c103_FINAL("TMF:", "file_io.c", "file_io_c103", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c113_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0Error: invalid device node given: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c113_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 12 \"%0Error: invalid device node given: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c113
    #define WPP_ANNOTATE_file_io_c113 WPP_ANNOTATE_file_io_c113_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c113 WPP_ANNOTATE_file_io_c113_FINAL("TMF:", "file_io.c", "file_io_c113", L"{", L"fileName, ItemPWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c125_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0Failed to create 'user' device file. User BAR does not exist!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c125_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 13 \"%0Failed to create 'user' device file. User BAR does not exist!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c125
    #define WPP_ANNOTATE_file_io_c125 WPP_ANNOTATE_file_io_c125_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c125 WPP_ANNOTATE_file_io_c125_FINAL("TMF:", "file_io.c", "file_io_c125", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c133_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0Failed to create 'bypass' device file. User BAR does not exist!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c133_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 14 \"%0Failed to create 'bypass' device file. User BAR does not exist!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c133
    #define WPP_ANNOTATE_file_io_c133 WPP_ANNOTATE_file_io_c133_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c133 WPP_ANNOTATE_file_io_c133_FINAL("TMF:", "file_io.c", "file_io_c133", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c146_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0Error: engine %10!s!_%11!d! not enabled in XDMA IP core\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c146_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 15 \"%0Error: engine %10!s!_%11!d! not enabled in XDMA IP core\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c146
    #define WPP_ANNOTATE_file_io_c146 WPP_ANNOTATE_file_io_c146_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c146 WPP_ANNOTATE_file_io_c146_FINAL("TMF:", "file_io.c", "file_io_c146", L"{", L"dir == H2C ? 'h2c' : 'c2h', ItemString -- 10" , L"index, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c158_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0pollMode=%10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c158_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 16 \"%0pollMode=%10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c158
    #define WPP_ANNOTATE_file_io_c158 WPP_ANNOTATE_file_io_c158_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c158 WPP_ANNOTATE_file_io_c158_FINAL("TMF:", "file_io.c", "file_io_c158", L"{", L"devNode->u.engine->poll, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c172_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0Created %10!s! device file\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c172_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 17 \"%0Created %10!s! device file\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c172
    #define WPP_ANNOTATE_file_io_c172 WPP_ANNOTATE_file_io_c172_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c172 WPP_ANNOTATE_file_io_c172_FINAL("TMF:", "file_io.c", "file_io_c172", L"{", L"fileName, ItemPWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c176_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0returns %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c176_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 18 \"%0returns %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c176
    #define WPP_ANNOTATE_file_io_c176 WPP_ANNOTATE_file_io_c176_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c176 WPP_ANNOTATE_file_io_c176_FINAL("TMF:", "file_io.c", "file_io_c176", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c181_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0Closing file %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c181_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 19 \"%0Closing file %10!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c181
    #define WPP_ANNOTATE_file_io_c181 WPP_ANNOTATE_file_io_c181_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c181 WPP_ANNOTATE_file_io_c181_FINAL("TMF:", "file_io.c", "file_io_c181", L"{", L"fileName, ItemPWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c192_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0Cleanup %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c192_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 20 \"%0Cleanup %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c192
    #define WPP_ANNOTATE_file_io_c192 WPP_ANNOTATE_file_io_c192_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPWString -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c192 WPP_ANNOTATE_file_io_c192_FINAL("TMF:", "file_io.c", "file_io_c192", L"{", L"fileName, ItemPWString -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c197_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0Error: attempting to read 0 bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c197_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 21 \"%0Error: attempting to read 0 bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c197
    #define WPP_ANNOTATE_file_io_c197 WPP_ANNOTATE_file_io_c197_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c197 WPP_ANNOTATE_file_io_c197_FINAL("TMF:", "file_io.c", "file_io_c197", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c203_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0Error: attempting to read BAR %10!u! but only 2 exist\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c203_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 22 \"%0Error: attempting to read BAR %10!u! but only 2 exist\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c203
    #define WPP_ANNOTATE_file_io_c203 WPP_ANNOTATE_file_io_c203_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c203 WPP_ANNOTATE_file_io_c203_FINAL("TMF:", "file_io.c", "file_io_c203", L"{", L"nBar, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c209_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0Error: attempting to read BAR %10!u! offset=%11!I64u! size=%12!I64u!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c209_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 23 \"%0Error: attempting to read BAR %10!u! offset=%11!I64u! size=%12!I64u!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c209
    #define WPP_ANNOTATE_file_io_c209 WPP_ANNOTATE_file_io_c209_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"Arg, ItemULongLong -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c209 WPP_ANNOTATE_file_io_c209_FINAL("TMF:", "file_io.c", "file_io_c209", L"{", L"nBar, ItemLong -- 10" , L"offset, ItemULongLong -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c228_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0Error: attempting to read 0 bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c228_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 24 \"%0Error: attempting to read 0 bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c228
    #define WPP_ANNOTATE_file_io_c228 WPP_ANNOTATE_file_io_c228_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c228 WPP_ANNOTATE_file_io_c228_FINAL("TMF:", "file_io.c", "file_io_c228", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c239_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c239_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 25 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c239
    #define WPP_ANNOTATE_file_io_c239 WPP_ANNOTATE_file_io_c239_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c239 WPP_ANNOTATE_file_io_c239_FINAL("TMF:", "file_io.c", "file_io_c239", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c270_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0Error: attempting to read 0 bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c270_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 26 \"%0Error: attempting to read 0 bytes\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c270
    #define WPP_ANNOTATE_file_io_c270 WPP_ANNOTATE_file_io_c270_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c270 WPP_ANNOTATE_file_io_c270_FINAL("TMF:", "file_io.c", "file_io_c270", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c281_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0WdfRequestRetrieveInputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c281_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 27 \"%0WdfRequestRetrieveInputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c281
    #define WPP_ANNOTATE_file_io_c281 WPP_ANNOTATE_file_io_c281_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c281 WPP_ANNOTATE_file_io_c281_FINAL("TMF:", "file_io.c", "file_io_c281", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c309_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0(Queue=%10!p!, Request=%11!p!, Length=%12!I64u!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c309_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 28 \"%0(Queue=%10!p!, Request=%11!p!, Length=%12!I64u!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c309
    #define WPP_ANNOTATE_file_io_c309 WPP_ANNOTATE_file_io_c309_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c309 WPP_ANNOTATE_file_io_c309_FINAL("TMF:", "file_io.c", "file_io_c309", L"{", L"queue, ItemPtr -- 10" , L"request, ItemPtr -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c310_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0devNodeType %10!d!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c310_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 29 \"%0devNodeType %10!d!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c310
    #define WPP_ANNOTATE_file_io_c310 WPP_ANNOTATE_file_io_c310_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c310 WPP_ANNOTATE_file_io_c310_FINAL("TMF:", "file_io.c", "file_io_c310", L"{", L"file->devType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c339_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0fails with invalid DevNodeID %10!d!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c339_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 30 \"%0fails with invalid DevNodeID %10!d!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c339
    #define WPP_ANNOTATE_file_io_c339 WPP_ANNOTATE_file_io_c339_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c339 WPP_ANNOTATE_file_io_c339_FINAL("TMF:", "file_io.c", "file_io_c339", L"{", L"file->devType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c344_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0request complete with %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c344_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 31 \"%0request complete with %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c344
    #define WPP_ANNOTATE_file_io_c344 WPP_ANNOTATE_file_io_c344_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c344 WPP_ANNOTATE_file_io_c344_FINAL("TMF:", "file_io.c", "file_io_c344", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c359_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0(Queue=%10!p!, Request=%11!p!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c359_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 32 \"%0(Queue=%10!p!, Request=%11!p!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c359
    #define WPP_ANNOTATE_file_io_c359 WPP_ANNOTATE_file_io_c359_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c359 WPP_ANNOTATE_file_io_c359_FINAL("TMF:", "file_io.c", "file_io_c359", L"{", L"queue, ItemPtr -- 10" , L"request, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c360_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0DevNodeID %10!d!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c360_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 33 \"%0DevNodeID %10!d!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c360
    #define WPP_ANNOTATE_file_io_c360 WPP_ANNOTATE_file_io_c360_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c360 WPP_ANNOTATE_file_io_c360_FINAL("TMF:", "file_io.c", "file_io_c360", L"{", L"file->devType, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c387_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0Error Request 0x%10!p!: %11!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c387_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 34 \"%0Error Request 0x%10!p!: %11!s!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c387
    #define WPP_ANNOTATE_file_io_c387 WPP_ANNOTATE_file_io_c387_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemNTSTATUS -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c387 WPP_ANNOTATE_file_io_c387_FINAL("TMF:", "file_io.c", "file_io_c387", L"{", L"request, ItemPtr -- 10" , L"status, ItemNTSTATUS -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c403_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c403_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 35 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c403
    #define WPP_ANNOTATE_file_io_c403 WPP_ANNOTATE_file_io_c403_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c403 WPP_ANNOTATE_file_io_c403_FINAL("TMF:", "file_io.c", "file_io_c403", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c410_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c410_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 36 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c410
    #define WPP_ANNOTATE_file_io_c410 WPP_ANNOTATE_file_io_c410_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c410 WPP_ANNOTATE_file_io_c410_FINAL("TMF:", "file_io.c", "file_io_c410", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c421_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0addrMode=%10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c421_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 37 \"%0addrMode=%10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c421
    #define WPP_ANNOTATE_file_io_c421 WPP_ANNOTATE_file_io_c421_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c421 WPP_ANNOTATE_file_io_c421_FINAL("TMF:", "file_io.c", "file_io_c421", L"{", L"addrMode, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c427_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c427_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 38 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c427
    #define WPP_ANNOTATE_file_io_c427 WPP_ANNOTATE_file_io_c427_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c427 WPP_ANNOTATE_file_io_c427_FINAL("TMF:", "file_io.c", "file_io_c427", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c434_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c434_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 39 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c434
    #define WPP_ANNOTATE_file_io_c434 WPP_ANNOTATE_file_io_c434_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c434 WPP_ANNOTATE_file_io_c434_FINAL("TMF:", "file_io.c", "file_io_c434", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c449_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c449_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 40 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c449
    #define WPP_ANNOTATE_file_io_c449 WPP_ANNOTATE_file_io_c449_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c449 WPP_ANNOTATE_file_io_c449_FINAL("TMF:", "file_io.c", "file_io_c449", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c457_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c457_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 41 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c457
    #define WPP_ANNOTATE_file_io_c457 WPP_ANNOTATE_file_io_c457_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c457 WPP_ANNOTATE_file_io_c457_FINAL("TMF:", "file_io.c", "file_io_c457", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c468_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0addrMode=%10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c468_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 42 \"%0addrMode=%10!u!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c468
    #define WPP_ANNOTATE_file_io_c468 WPP_ANNOTATE_file_io_c468_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c468 WPP_ANNOTATE_file_io_c468_FINAL("TMF:", "file_io.c", "file_io_c468", L"{", L"addrMode, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c487_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0IOCTL only supported on DMA files (hc2_* or c2h_* devices)\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c487_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 43 \"%0IOCTL only supported on DMA files (hc2_* or c2h_* devices)\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c487
    #define WPP_ANNOTATE_file_io_c487 WPP_ANNOTATE_file_io_c487_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c487 WPP_ANNOTATE_file_io_c487_FINAL("TMF:", "file_io.c", "file_io_c487", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c496_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0%10!s!_%11!u! IOCTL_XDMA_PERF_START\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c496_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 44 \"%0%10!s!_%11!u! IOCTL_XDMA_PERF_START\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c496
    #define WPP_ANNOTATE_file_io_c496 WPP_ANNOTATE_file_io_c496_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c496 WPP_ANNOTATE_file_io_c496_FINAL("TMF:", "file_io.c", "file_io_c496", L"{", L"queue->engine->dir == H2C ? 'H2C' : 'C2H', ItemString -- 10" , L"queue->engine->channel, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c503_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0%10!s!_%11!u! IOCTL_XDMA_PERF_GET\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c503_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 45 \"%0%10!s!_%11!u! IOCTL_XDMA_PERF_GET\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c503
    #define WPP_ANNOTATE_file_io_c503 WPP_ANNOTATE_file_io_c503_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c503 WPP_ANNOTATE_file_io_c503_FINAL("TMF:", "file_io.c", "file_io_c503", L"{", L"queue->engine->dir == H2C ? 'H2C' : 'C2H', ItemString -- 10" , L"queue->engine->channel, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c511_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0%10!s!_%11!u! IOCTL_XDMA_ADDRMODE_GET\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c511_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 46 \"%0%10!s!_%11!u! IOCTL_XDMA_ADDRMODE_GET\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c511
    #define WPP_ANNOTATE_file_io_c511 WPP_ANNOTATE_file_io_c511_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c511 WPP_ANNOTATE_file_io_c511_FINAL("TMF:", "file_io.c", "file_io_c511", L"{", L"queue->engine->dir == H2C ? 'H2C' : 'C2H', ItemString -- 10" , L"queue->engine->channel, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c519_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0%10!s!_%11!u! IOCTL_XDMA_ADDRMODE_SET\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c519_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 47 \"%0%10!s!_%11!u! IOCTL_XDMA_ADDRMODE_SET\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c519
    #define WPP_ANNOTATE_file_io_c519 WPP_ANNOTATE_file_io_c519_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c519 WPP_ANNOTATE_file_io_c519_FINAL("TMF:", "file_io.c", "file_io_c519", L"{", L"queue->engine->dir == H2C ? 'H2C' : 'C2H', ItemString -- 10" , L"queue->engine->channel, ItemLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c527_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0Unknown IOCTL code!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c527_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 48 \"%0Unknown IOCTL code!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c527
    #define WPP_ANNOTATE_file_io_c527 WPP_ANNOTATE_file_io_c527_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c527 WPP_ANNOTATE_file_io_c527_FINAL("TMF:", "file_io.c", "file_io_c527", L"{", L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c536_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0exit with status: %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c536_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 49 \"%0exit with status: %10!s!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c536
    #define WPP_ANNOTATE_file_io_c536 WPP_ANNOTATE_file_io_c536_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c536 WPP_ANNOTATE_file_io_c536_FINAL("TMF:", "file_io.c", "file_io_c536", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c547_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0%!FUNC!(queue=%10!p!, request=%11!p!, length=%12!I64u!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c547_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 50 \"%0%!FUNC!(queue=%10!p!, request=%11!p!, length=%12!I64u!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c547
    #define WPP_ANNOTATE_file_io_c547 WPP_ANNOTATE_file_io_c547_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c547 WPP_ANNOTATE_file_io_c547_FINAL("TMF:", "file_io.c", "file_io_c547", L"{", L"wdfQueue, ItemPtr -- 10" , L"Request, ItemPtr -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c550_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0%10!s!_%11!u! writing %12!I64u! bytes to device\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c550_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 51 \"%0%10!s!_%11!u! writing %12!I64u! bytes to device\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c550
    #define WPP_ANNOTATE_file_io_c550 WPP_ANNOTATE_file_io_c550_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c550 WPP_ANNOTATE_file_io_c550_FINAL("TMF:", "file_io.c", "file_io_c550", L"{", L"DirectionToString(engine->dir), ItemString -- 10" , L"engine->channel, ItemLong -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c558_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0WdfDmaTransactionInitializeUsingRequest failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c558_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 52 \"%0WdfDmaTransactionInitializeUsingRequest failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c558
    #define WPP_ANNOTATE_file_io_c558 WPP_ANNOTATE_file_io_c558_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c558 WPP_ANNOTATE_file_io_c558_FINAL("TMF:", "file_io.c", "file_io_c558", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c563_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0WdfRequestMarkCancelableEx failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c563_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 53 \"%0WdfRequestMarkCancelableEx failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c563
    #define WPP_ANNOTATE_file_io_c563 WPP_ANNOTATE_file_io_c563_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c563 WPP_ANNOTATE_file_io_c563_FINAL("TMF:", "file_io.c", "file_io_c563", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c570_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0WdfDmaTransactionExecute failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c570_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 54 \"%0WdfDmaTransactionExecute failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c570
    #define WPP_ANNOTATE_file_io_c570 WPP_ANNOTATE_file_io_c570_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c570 WPP_ANNOTATE_file_io_c570_FINAL("TMF:", "file_io.c", "file_io_c570", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c577_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0EnginePollTransfer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c577_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 55 \"%0EnginePollTransfer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c577
    #define WPP_ANNOTATE_file_io_c577 WPP_ANNOTATE_file_io_c577_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c577 WPP_ANNOTATE_file_io_c577_FINAL("TMF:", "file_io.c", "file_io_c577", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c586_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0Error Request 0x%10!p!: %11!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c586_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 56 \"%0Error Request 0x%10!p!: %11!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c586
    #define WPP_ANNOTATE_file_io_c586 WPP_ANNOTATE_file_io_c586_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemNTSTATUS -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c586 WPP_ANNOTATE_file_io_c586_FINAL("TMF:", "file_io.c", "file_io_c586", L"{", L"Request, ItemPtr -- 10" , L"status, ItemNTSTATUS -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c596_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0%!FUNC!(queue=%10!p!, request=%11!p!, length=%12!I64u!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c596_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 57 \"%0%!FUNC!(queue=%10!p!, request=%11!p!, length=%12!I64u!)\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c596
    #define WPP_ANNOTATE_file_io_c596 WPP_ANNOTATE_file_io_c596_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c596 WPP_ANNOTATE_file_io_c596_FINAL("TMF:", "file_io.c", "file_io_c596", L"{", L"wdfQueue, ItemPtr -- 10" , L"Request, ItemPtr -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c599_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0%10!s!_%11!u! reading %12!I64u! bytes from device\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c599_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 58 \"%0%10!s!_%11!u! reading %12!I64u! bytes from device\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c599
    #define WPP_ANNOTATE_file_io_c599 WPP_ANNOTATE_file_io_c599_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c599 WPP_ANNOTATE_file_io_c599_FINAL("TMF:", "file_io.c", "file_io_c599", L"{", L"DirectionToString(engine->dir), ItemString -- 10" , L"engine->channel, ItemLong -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c607_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0WdfDmaTransactionInitializeUsingRequest failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c607_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 59 \"%0WdfDmaTransactionInitializeUsingRequest failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c607
    #define WPP_ANNOTATE_file_io_c607 WPP_ANNOTATE_file_io_c607_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c607 WPP_ANNOTATE_file_io_c607_FINAL("TMF:", "file_io.c", "file_io_c607", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c613_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0WdfRequestMarkCancelableEx failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c613_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 60 \"%0WdfRequestMarkCancelableEx failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c613
    #define WPP_ANNOTATE_file_io_c613 WPP_ANNOTATE_file_io_c613_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c613 WPP_ANNOTATE_file_io_c613_FINAL("TMF:", "file_io.c", "file_io_c613", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c620_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0WdfDmaTransactionExecute failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c620_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 61 \"%0WdfDmaTransactionExecute failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c620
    #define WPP_ANNOTATE_file_io_c620 WPP_ANNOTATE_file_io_c620_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c620 WPP_ANNOTATE_file_io_c620_FINAL("TMF:", "file_io.c", "file_io_c620", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c627_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0EnginePollTransfer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c627_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 62 \"%0EnginePollTransfer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c627
    #define WPP_ANNOTATE_file_io_c627 WPP_ANNOTATE_file_io_c627_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c627 WPP_ANNOTATE_file_io_c627_FINAL("TMF:", "file_io.c", "file_io_c627", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c636_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0Error Request 0x%10!p!: %11!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c636_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 63 \"%0Error Request 0x%10!p!: %11!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c636
    #define WPP_ANNOTATE_file_io_c636 WPP_ANNOTATE_file_io_c636_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemNTSTATUS -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c636 WPP_ANNOTATE_file_io_c636_FINAL("TMF:", "file_io.c", "file_io_c636", L"{", L"Request, ItemPtr -- 10" , L"status, ItemNTSTATUS -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c648_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c648_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 64 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c648
    #define WPP_ANNOTATE_file_io_c648 WPP_ANNOTATE_file_io_c648_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c648 WPP_ANNOTATE_file_io_c648_FINAL("TMF:", "file_io.c", "file_io_c648", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c653_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0%10!s!_%11!u! requesting %12!I64u! bytes from ring buffer\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c653_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 65 \"%0%10!s!_%11!u! requesting %12!I64u! bytes from ring buffer\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c653
    #define WPP_ANNOTATE_file_io_c653 WPP_ANNOTATE_file_io_c653_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemString -- 10" , L"Arg, ItemLong -- 11" , L"Arg, ItemULongLong -- 12" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c653 WPP_ANNOTATE_file_io_c653_FINAL("TMF:", "file_io.c", "file_io_c653", L"{", L"DirectionToString(engine->dir), ItemString -- 10" , L"engine->channel, ItemLong -- 11" , L"length, ItemULongLong -- 12" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c666_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0Request 0x%10!p! from Queue 0x%11!p!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c666_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 66 \"%0Request 0x%10!p! from Queue 0x%11!p!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c666
    #define WPP_ANNOTATE_file_io_c666 WPP_ANNOTATE_file_io_c666_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemPtr -- 10" , L"Arg, ItemPtr -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c666 WPP_ANNOTATE_file_io_c666_FINAL("TMF:", "file_io.c", "file_io_c666", L"{", L"request, ItemPtr -- 10" , L"queue, ItemPtr -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c670_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0WdfRequestUnmarkCancelable failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c670_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 67 \"%0WdfRequestUnmarkCancelable failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c670
    #define WPP_ANNOTATE_file_io_c670 WPP_ANNOTATE_file_io_c670_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c670 WPP_ANNOTATE_file_io_c670_FINAL("TMF:", "file_io.c", "file_io_c670", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c674_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0WdfDmaTransactionRelease failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c674_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 68 \"%0WdfDmaTransactionRelease failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c674
    #define WPP_ANNOTATE_file_io_c674 WPP_ANNOTATE_file_io_c674_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c674 WPP_ANNOTATE_file_io_c674_FINAL("TMF:", "file_io.c", "file_io_c674", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c698_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0Error: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c698_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 69 \"%0Error: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c698
    #define WPP_ANNOTATE_file_io_c698 WPP_ANNOTATE_file_io_c698_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c698 WPP_ANNOTATE_file_io_c698_FINAL("TMF:", "file_io.c", "file_io_c698", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c723_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c723_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 70 \"%0WdfRequestRetrieveOutputMemory failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c723
    #define WPP_ANNOTATE_file_io_c723 WPP_ANNOTATE_file_io_c723_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c723 WPP_ANNOTATE_file_io_c723_FINAL("TMF:", "file_io.c", "file_io_c723", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c731_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0Error: length is %10!I64u! but must be %11!I64u!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c731_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 71 \"%0Error: length is %10!I64u! but must be %11!I64u!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c731
    #define WPP_ANNOTATE_file_io_c731 WPP_ANNOTATE_file_io_c731_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemULongLong -- 10" , L"Arg, ItemULongLong -- 11" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c731 WPP_ANNOTATE_file_io_c731_FINAL("TMF:", "file_io.c", "file_io_c731", L"{", L"bufSize, ItemULongLong -- 10" , L"sizeof(UINT32), ItemULongLong -- 11" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c739_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c739_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 72 \"%0WdfMemoryCopyFromBuffer failed: %10!s!\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c739
    #define WPP_ANNOTATE_file_io_c739 WPP_ANNOTATE_file_io_c739_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemNTSTATUS -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c739 WPP_ANNOTATE_file_io_c739_FINAL("TMF:", "file_io.c", "file_io_c739", L"{", L"status, ItemNTSTATUS -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c744_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0user events returned is 0x%10!08X!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c744_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 73 \"%0user events returned is 0x%10!08X!\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c744
    #define WPP_ANNOTATE_file_io_c744 WPP_ANNOTATE_file_io_c744_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c744 WPP_ANNOTATE_file_io_c744_FINAL("TMF:", "file_io.c", "file_io_c744", L"{", L"eventValue, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c747_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0user EP=0x%10!08X!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c747_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 74 \"%0user EP=0x%10!08X!\" //   LEVEL=TRACE_LEVEL_VERBOSE FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c747
    #define WPP_ANNOTATE_file_io_c747 WPP_ANNOTATE_file_io_c747_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c747 WPP_ANNOTATE_file_io_c747_FINAL("TMF:", "file_io.c", "file_io_c747", L"{", L"eventValue, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c756_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0event_%10!u! signaling completion\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c756_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 75 \"%0event_%10!u! signaling completion\" //   LEVEL=TRACE_LEVEL_INFORMATION FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c756
    #define WPP_ANNOTATE_file_io_c756 WPP_ANNOTATE_file_io_c756_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"Arg, ItemLong -- 10" , L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c756 WPP_ANNOTATE_file_io_c756_FINAL("TMF:", "file_io.c", "file_io_c756", L"{", L"eventId, ItemLong -- 10" , L"}")
#endif
#if !defined(WPP_USER_MSG_GUID)
# define WPP_ANNOTATE_file_io_c90_FINAL(P, File, Name, ...)    __annotation(L ## P, L"4a1070db-af30-398b-7bcc-50430100a208 sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0GetDevNodeID() returns ID_DEVNODE_UNKNOWN\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#else
# define WPP_ANNOTATE_file_io_c90_FINAL(P, File, Name, ...)    __annotation(L ## P, WPP_GUID_WTEXT WPP_USER_MSG_GUID L"sys // SRC=" _WPPW(File) L" MJ= MN=", L"#typev "  _WPPW(Name) L" 10 \"%0GetDevNodeID() returns ID_DEVNODE_UNKNOWN\" //   LEVEL=TRACE_LEVEL_ERROR FLAGS=DBG_IO" WPP_FUNC_NAME, __VA_ARGS__)
#endif

#ifdef WPP_PUBLIC_ANNOT_file_io_c90
    #define WPP_ANNOTATE_file_io_c90 WPP_ANNOTATE_file_io_c90_FINAL("TMF:", "Unknown_cxx00", "Unknown_cxx00", L"{", L"}", L"PUBLIC_TMF:")

    #ifndef WPP_PUBLIC_TMC
        #define WPP_PUBLIC_TMC
    #endif
#else
    #define WPP_ANNOTATE_file_io_c90 WPP_ANNOTATE_file_io_c90_FINAL("TMF:", "file_io.c", "file_io_c90", L"{", L"}")
#endif
# define WPP_ANNOTATE(x) WPP_ANNOTATE_ ## x,

#else
# define WPP_ANNOTATE(x)
#endif


#if 1
#if !defined(WPP_USER_MSG_GUID)

#define WPP_LOCAL_TraceGuids WPP_4a1070dbaf30398b7bcc50430100a208_Traceguids
extern const __declspec(selectany) GUID WPP_LOCAL_TraceGuids[] = { {0x4a1070db,0xaf30,0x398b,{0x7b,0xcc,0x50,0x43,0x01,0x00,0xa2,0x08}}, };

#else

#define WPP_LOCAL_MSG_VAR(Guid) WPP_XGLUE3(WPP_, WPP_GUID_NORM Guid, _Traceguids)

#define WPP_LOCAL_MSG_GUID(Guid) \
extern const __declspec(selectany) GUID WPP_LOCAL_MSG_VAR(Guid)[] = { WPP_GUID_STRUCT Guid }

WPP_LOCAL_MSG_GUID(WPP_USER_MSG_GUID);
#define WPP_LOCAL_TraceGuids WPP_LOCAL_MSG_VAR(WPP_USER_MSG_GUID)

#endif
#endif

#ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_TRACE_OPTIONS)
enum {WPP_TRACE_OPTIONS = TRACE_MESSAGE_SEQUENCE   | TRACE_MESSAGE_GUID
                        | TRACE_MESSAGE_SYSTEMINFO | TRACE_MESSAGE_TIMESTAMP };
#endif

#ifndef WPP_LOGPAIR_SEPARATOR
# define WPP_LOGPAIR_SEPARATOR ,
#endif
#ifndef WPP_LOGPAIR_SIZET
# define WPP_LOGPAIR_SIZET SIZE_T
#endif
#if !defined(WPP_LOGPAIR)
# define WPP_LOGPAIR(_Size, _Addr)     (_Addr),((WPP_LOGPAIR_SIZET)(_Size))WPP_LOGPAIR_SEPARATOR
#endif

#define WPP_LOGTYPEVAL(_Type, _Value) WPP_LOGPAIR(sizeof(_Type), &(_Value))
#define WPP_LOGTYPEPTR(_Value)        WPP_LOGPAIR(sizeof(*(_Value)), (_Value))

// Marshalling macros.

#if !defined(WPP_LOGASTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR(strlen(_value) + 1, _value )
# else
#  define WPP_LOGASTR(_value)  WPP_LOGPAIR( (_value)?strlen(_value) + 1:5, (_value)?(_value):"NULL" )
# endif
#endif

#if !defined(WPP_LOGWSTR)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( (wcslen(_value)+1) * sizeof(WCHAR), _value)
# else
#  define WPP_LOGWSTR(_value)  WPP_LOGPAIR( ((_value)?wcslen(_value) + 1:5) * sizeof(WCHAR), (_value)?(_value):L"NULL" )
# endif
#endif

#if !defined(WPP_LOGPGUID)
# define WPP_LOGPGUID(_value) WPP_LOGPAIR( sizeof(GUID), (_value) )
#endif


#if !defined(WPP_LOGPSID)
# if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( WPP_GetLengthSid(_value), (_value) )
# else
# define WPP_LOGPSID(_value)  WPP_LOGPAIR( (_value)? (WPP_IsValidSid(_value)? \
                                                                        WPP_GetLengthSid(_value):5):5, \
                                                                        (_value)? (WPP_IsValidSid(_value)?\
                                                                        (_value):"NULL"):"NULL")
#endif
#endif

#if !defined(WPP_LOGCSTR)
# define WPP_LOGCSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGUSTR)
# define WPP_LOGUSTR(_x) \
    WPP_LOGPAIR( sizeof((_x).Length), &(_x).Length ) WPP_LOGPAIR( (_x).Length, (_x).Buffer )
#endif

#if !defined(WPP_LOGPUSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPUSTR(_x) WPP_LOGUSTR(*(_x))
#else
# define WPP_LOGPUSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x08" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x08, (_x)?(_x)->Buffer:L"NULL" )
#endif
#endif

#if !defined(WPP_LOGPCSTR)
#if !defined(WPP_CHECK_FOR_NULL_STRING)
# define WPP_LOGPCSTR(_x) WPP_LOGCSTR(*(_x))
#else
# define WPP_LOGPCSTR(_x) WPP_LOGPAIR( sizeof(USHORT), (_x)?&(_x)->Length:L"\x04" ) \
                          WPP_LOGPAIR( (_x)?(_x)->Length:0x04, (_x)?(_x)->Buffer:"NULL" )
#endif
#endif

#if !defined(WPP_LOGSTDSTR)
#define WPP_LOGSTDSTR(_value)  WPP_LOGPAIR( (_value).size()+1, (_value).c_str() )
#endif

#endif  //  #ifndef WPP_ALREADY_INCLUDED

#if !defined(WPP_CHECK_INIT)
# define WPP_CHECK_INIT (WPP_CB != (WPP_CB_TYPE*)&WPP_CB) &&
#endif

#ifndef WPP_SF__def
#       define WPP_SF__def
WPP_INLINE void WPP_SF_(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id,  (void*)0); }
#endif  // #ifndef WPP_SF__def
#ifndef WPP_SF_D_def
#       define WPP_SF_D_def
WPP_INLINE void WPP_SF_D(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1)  (void*)0); }
#endif  // #ifndef WPP_SF_D_def
#ifndef WPP_SF_DII_def
#       define WPP_SF_DII_def
WPP_INLINE void WPP_SF_DII(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned int _a1, unsigned __int64 _a2, unsigned __int64 _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned int,_a1) WPP_LOGTYPEVAL(unsigned __int64,_a2) WPP_LOGTYPEVAL(unsigned __int64,_a3)  (void*)0); }
#endif  // #ifndef WPP_SF_DII_def
#ifndef WPP_SF_II_def
#       define WPP_SF_II_def
WPP_INLINE void WPP_SF_II(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, unsigned __int64 _a1, unsigned __int64 _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(unsigned __int64,_a1) WPP_LOGTYPEVAL(unsigned __int64,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_II_def
#ifndef WPP_SF_Z_def
#       define WPP_SF_Z_def
WPP_INLINE void WPP_SF_Z(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, PCUNICODE_STRING _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGPUSTR(_a1)  (void*)0); }
#endif  // #ifndef WPP_SF_Z_def
#ifndef WPP_SF_d_def
#       define WPP_SF_d_def
WPP_INLINE void WPP_SF_d(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, signed int _a1)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(signed int,_a1)  (void*)0); }
#endif  // #ifndef WPP_SF_d_def
#ifndef WPP_SF_qd_def
#       define WPP_SF_qd_def
WPP_INLINE void WPP_SF_qd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(signed int,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_qd_def
#ifndef WPP_SF_qq_def
#       define WPP_SF_qq_def
WPP_INLINE void WPP_SF_qq(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, const void* _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(const void*,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_qq_def
#ifndef WPP_SF_qqI_def
#       define WPP_SF_qqI_def
WPP_INLINE void WPP_SF_qqI(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const void* _a1, const void* _a2, unsigned __int64 _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGTYPEVAL(const void*,_a1) WPP_LOGTYPEVAL(const void*,_a2) WPP_LOGTYPEVAL(unsigned __int64,_a3)  (void*)0); }
#endif  // #ifndef WPP_SF_qqI_def
#ifndef WPP_SF_sD_def
#       define WPP_SF_sD_def
WPP_INLINE void WPP_SF_sD(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_sD_def
#ifndef WPP_SF_sDI_def
#       define WPP_SF_sDI_def
WPP_INLINE void WPP_SF_sDI(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, unsigned int _a2, unsigned __int64 _a3)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(unsigned int,_a2) WPP_LOGTYPEVAL(unsigned __int64,_a3)  (void*)0); }
#endif  // #ifndef WPP_SF_sDI_def
#ifndef WPP_SF_sd_def
#       define WPP_SF_sd_def
WPP_INLINE void WPP_SF_sd(WPP_LOGGER_ARG unsigned short id, LPCGUID TraceGuid, const char* _a1, signed int _a2)
   { WPP_TRACE(WPP_GET_LOGGER, WPP_TRACE_OPTIONS, (LPGUID)TraceGuid, id, WPP_LOGASTR(_a1) WPP_LOGTYPEVAL(signed int,_a2)  (void*)0); }
#endif  // #ifndef WPP_SF_sd_def
#ifndef WPP_POST
#  define WPP_POST()
#endif

#ifndef WPP_PRE
#  define WPP_PRE()
#endif

#ifndef WPP_LOG_ALWAYS
#  define WPP_LOG_ALWAYS(...)
#endif

#ifdef WPP_DEBUG
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c103(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c103) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           11, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c113(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c113) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_Z(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           12, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c125(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c125) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           13, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c133(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c133) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           14, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c146(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c146) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_sd(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           15, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c158(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c158) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           16, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c172(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c172) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_Z(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           17, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c176(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c176) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           18, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c181(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c181) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_Z(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           19, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c192(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c192) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_Z(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           20, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c197(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c197) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           21, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c203(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c203) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           22, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c209(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c209) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_DII(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           23, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c228(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c228) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           24, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c239(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c239) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           25, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c270(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c270) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           26, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c281(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c281) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           27, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c309(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c309) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_qqI(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           28, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c310(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c310) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           29, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c339(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c339) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           30, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c344(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c344) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           31, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c359(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c359) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_qq(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           32, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c360(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c360) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           33, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c387(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c387) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_qd(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           34, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c403(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c403) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           35, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c410(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c410) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           36, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c421(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c421) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           37, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c427(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c427) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           38, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c434(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c434) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           39, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c449(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c449) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           40, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c457(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c457) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           41, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c468(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c468) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           42, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c487(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c487) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           43, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c496(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c496) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_sD(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           44, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c503(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c503) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_sD(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           45, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c511(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c511) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_sD(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           46, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c519(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c519) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_sD(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           47, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c527(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c527) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           48, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c536(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c536) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           49, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c547(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c547) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_qqI(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           50, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c550(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c550) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_sDI(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           51, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c558(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c558) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           52, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c563(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c563) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           53, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c570(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c570) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           54, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c577(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c577) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           55, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c586(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c586) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_qd(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           56, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c596(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c596) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_qqI(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           57, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c599(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c599) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_sDI(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           58, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c607(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c607) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           59, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c613(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c613) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           60, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c620(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c620) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           61, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c627(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c627) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           62, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c636(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c636) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_qd(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           63, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c648(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c648) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           64, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c653(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11,a12)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c653) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11,a12)), \
        WPP_SF_sDI(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           65, \
                           WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c666(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c666) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_qq(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           66, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c670(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c670) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           67, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c674(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c674) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           68, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c698(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c698) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           69, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c723(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c723) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           70, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c731(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c731) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10,a11)), \
        WPP_SF_II(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           71, \
                           WPP_LOCAL_TraceGuids+0, a10, a11), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c739(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c739) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           72, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c744(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c744) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           73, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c747(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c747) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                           74, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c756(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c756) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
        WPP_DEBUG((MSG,a10)), \
        WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                           75, \
                           WPP_LOCAL_TraceGuids+0, a10), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c90(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG)\
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c90) \
    (( \
        WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
        WPP_DEBUG((MSG)), \
        WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                           10, \
                           WPP_LOCAL_TraceGuids+0), \
        1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#else
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c103(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c103) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            11, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c113(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c113) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_Z(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            12, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c125(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c125) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            13, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c133(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c133) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            14, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c146(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c146) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_sd(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            15, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c158(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c158) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            16, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c172(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c172) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_Z(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            17, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c176(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c176) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            18, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c181(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c181) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_Z(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            19, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c192(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c192) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_Z(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            20, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c197(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c197) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            21, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c203(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c203) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            22, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c209(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c209) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_DII(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            23, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c228(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c228) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            24, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c239(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c239) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            25, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c270(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c270) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            26, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c281(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c281) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            27, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c309(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c309) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_qqI(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            28, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c310(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c310) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            29, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c339(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c339) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            30, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c344(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c344) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            31, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c359(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c359) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_qq(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            32, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c360(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c360) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            33, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c387(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c387) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_qd(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            34, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c403(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c403) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            35, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c410(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c410) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            36, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c421(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c421) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            37, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c427(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c427) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            38, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c434(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c434) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            39, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c449(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c449) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            40, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c457(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c457) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            41, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c468(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c468) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            42, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c487(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c487) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            43, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c496(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c496) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_sD(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            44, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c503(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c503) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_sD(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            45, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c511(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c511) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_sD(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            46, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c519(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c519) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_sD(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            47, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c527(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c527) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            48, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c536(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c536) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            49, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c547(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c547) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_qqI(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            50, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c550(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c550) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_sDI(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            51, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c558(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c558) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            52, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c563(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c563) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            53, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c570(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c570) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            54, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c577(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c577) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            55, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c586(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c586) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_qd(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            56, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c596(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c596) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_qqI(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            57, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c599(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c599) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_sDI(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            58, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c607(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c607) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            59, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c613(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c613) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            60, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c620(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c620) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            61, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c627(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c627) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            62, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c636(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c636) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_qd(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            63, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c648(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c648) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            64, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c653(FLAGS, MSG,a10,a11,a12) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11,a12) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c653) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_sDI(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            65, \
                            WPP_LOCAL_TraceGuids+0, a10, a11, a12), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c666(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c666) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_qq(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            66, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c670(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c670) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            67, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c674(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c674) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            68, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c698(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c698) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            69, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c723(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c723) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            70, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c731(FLAGS, MSG,a10,a11) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10,a11) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c731) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_II(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            71, \
                            WPP_LOCAL_TraceGuids+0, a10, a11), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c739(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c739) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_d(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            72, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c744(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c744) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            73, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c747(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_VERBOSE, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_VERBOSE, FLAGS) \
    WPP_ANNOTATE(file_io_c747) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_VERBOSE, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_VERBOSE, FLAGS) \
                            74, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_VERBOSE, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c756(FLAGS, MSG,a10) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_INFORMATION, FLAGS),MSG,a10) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_INFORMATION, FLAGS) \
    WPP_ANNOTATE(file_io_c756) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_INFORMATION, FLAGS) ? \
         WPP_SF_D(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_INFORMATION, FLAGS) \
                            75, \
                            WPP_LOCAL_TraceGuids+0, a10), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_INFORMATION, FLAGS)
#ifndef WPP_LEVEL_FLAGS_POST
#  define WPP_LEVEL_FLAGS_POST(LEVEL,FLAGS)
#endif
#ifndef WPP_LEVEL_FLAGS_PRE
#  define WPP_LEVEL_FLAGS_PRE(LEVEL,FLAGS)
#endif
#define WPP_CALL_file_io_c90(FLAGS, MSG) \
    WPP_LOG_ALWAYS(WPP_EX_LEVEL_FLAGS(TRACE_LEVEL_ERROR, FLAGS),MSG) \
    WPP_LEVEL_FLAGS_PRE(TRACE_LEVEL_ERROR, FLAGS) \
    WPP_ANNOTATE(file_io_c90) \
    (( \
         WPP_CHECK_INIT WPP_LEVEL_FLAGS_ENABLED(TRACE_LEVEL_ERROR, FLAGS) ? \
         WPP_SF_(WPP_LEVEL_FLAGS_LOGGER(TRACE_LEVEL_ERROR, FLAGS) \
                            10, \
                            WPP_LOCAL_TraceGuids+0), \
         1:0 \
    )) \
    WPP_LEVEL_FLAGS_POST(TRACE_LEVEL_ERROR, FLAGS)
#endif


#ifdef WPP_DEBUG
#else
#endif



#if defined(__cplusplus)
};
#endif

#endif

//
// Tracing Macro name redefinition
//

// NoMsgArgs

#undef DoDebugTrace
#define DoDebugTrace WPP_(CALL)
#undef DoTraceMessage
#define DoTraceMessage WPP_(CALL)
#undef TraceError
#define TraceError WPP_(CALL)
#undef TraceEvents
#define TraceEvents WPP_(CALL)
#undef TraceInfo
#define TraceInfo WPP_(CALL)
#undef TraceVerbose
#define TraceVerbose WPP_(CALL)
#undef TraceWarning
#define TraceWarning WPP_(CALL)
// MsgArgs

